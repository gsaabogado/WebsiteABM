---
title: ""
author: "Severin Reissl and Luis Sarmiento"
bibliography: Literature.bib
format: 
  html: 
    toc: true
    warning: false
    code-fold: true
    code-summary: "Show the Code"
---

# Data

In this section we describe at length the main characteristics and scientific processing of the data files we use in the ABM-REN model.

The section is divided into three main subsections:

-   German Socio-Economic Panel Study
-   Consumption data from the Deutscher Finanz Amt
-   Gallup data on environmental attitudes

## SOEP

Most of the data we use to feed our model comes from the German Socio-Economic Panel Study (SOEP); a representative longitudinal panel study that started in West Germany in 1984.

The SOEP is divided into different data files each containing different questionnaires -- in this model, we use data from SOEP-37.

The main questionnaires we use for the construction of the model are:

::: incremental
-   PEQUIV - Personal Equivalent File $\rightarrow$ ([Documentation](https://www.diw.de/de/diw_01.c.839052.de/s_13585.html))
-   HGEN - Household Generated Data File $\rightarrow$ ([Documentation](https://www.diw.de/documents/publikationen/73/diw_01.c.676077.de/diw_ssp0759.pdf))
-   HWEALTH - Household Wealth Questionaire
-   HCONSUM - Household Consumption Module
:::

### Data Structure

All of our variables are loded in one of two R formats; numeric or haven-labeled. Haven labeled format is similar to STATA (or SPSS) labeled data (For more information we refer the reader to the [online vignete of the haven package](https://haven.tidyverse.org/articles/semantics.html)).

The R-labeled class (part of the haven package) allows us to associate arbitrary labels to numeric or character vectors. Note that the goal of labeled files is only to include the description of categorical vectors in the SOEP data. For instance, when printing one labeled variable, the output consists of a vector of values alongside a data frame linking values and labels. It is essential to clarify that researchers must transform haven-labeled data formats into numeric or factor variables before using them in econometric, machine learning, or optimization models. Still, we keep the haven-labeled format in the raw files as it allows researchers to directly understand the values related to each numeric identifier of categorical variables in the SOEP data.

As an example, we show the gender column in the **pequiv** file. The variable contains a title identifier *Gender of Individual* alongside a vector of numeric values (i.e., 2,1,2,1,1,2), and the data frame linking values to labels.

```{r}
#| echo: false
file = gsub("WebsiteABM", "", getwd())
pequiv = read_rds(paste0(file, "02_GenData/03_SoepFiles/pequiv.rds"))
```

```{r}
#| echo: true
# Show the data set
head(pequiv$sex)
```

Also note that, **in general**, all negative entries refer to missing values for different reasons, e.g., the question was not part of that year's questionnaire or invalid answers.

### PEQUIV

@tbl-PequivIndividual shows a sample of individual-level characteristics we extract from the PEQUIV file. It consists of `r ncol(pequiv)` variables and `r comma(nrow(pequiv))` observations between 2005 and 2018. Each variable is either in a numeric or haven-labeled format. The data frame contains the individual and household IDs (*pid* and *hid*) alongside the year of the interview (year).

-   *head* is an indicator variable on the relationship between *pid* and the household head (1 = head, 2 = partner, 3 = child, 4 = relative, and 5 = non-relative).
-   *age* is the average age of *pid*
-   *sex* the sex (1 - Male; 2- Female) of *pid*
-   *education* the total years of education of *pid*

::: panel-tabset
## Individual

```{r}
#| label: tbl-PequivIndividual
#| tbl-cap: Individual characteristics from the PEQUIV file
#| tbl-cap-location: top
#| echo: true
# Show the data set
kbl(select(pequiv, pid, hid, year, head, sex, age, education) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```

## Spatial

```{r}
#| label: tbl-PequivSpatial
#| tbl-cap: Spatial variables from the PEQUIV file
#| tbl-cap-location: top
#| echo: true
# Show the data set
kbl(select(pequiv, pid, hid, year, state, region) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```

## Employment

```{r}
#| label: tbl-PequivEmployment
#| tbl-cap: Employment variables from the PEQUIV file
#| tbl-cap-location: top
#| echo: true
# Show the data set
kbl(select(pequiv, pid, hid, year, employment, occupation, industry1) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```

## Household

```{r}
#| label: tbl-PequivHH
#| tbl-cap: Household variables from the PEQUIV file
#| tbl-cap-location: top
#| echo: true
# Show the data set
kbl(select(pequiv, pid, hid, year, Npersons, Nkids, income, GrossIncome) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```
:::

@tbl-PequivSpatial includes data on the spatial location of the household. Because we are working with the open version of the SOEP, we can only identify the *state* and *region* where the household is located.

@tbl-PequivEmployment contains employment-related covariates. *employment* is a dummy variable equal to one if the person is currently employed. *occupation* is the person's occupation according to the International Classification of Occupations Code (ISCO). For instance, code 5,160 refers to protective service workers. *industry1* is a two-digit industry code based on ten categories (1 -- Agriculture, 2 -- Energy, 3 -- Mining, 4 -- Manufacturing, 5 -- Construction, 6 -- Trade, 7 -- Transport, 8 -- Bank and Insurance, 9 -- Services).

@tbl-PequivHH includes a set of household-level controls we extract from the PEQUIV file. *Npersons* and *Nkids* are the number of persons and kids in the household. *income* and *GrossIncome* are the household net and gross incomes in Euros per year.

### HGEN

```{r}
#| echo: false
file = gsub("WebsiteABM", "", getwd())
hgen = read_rds(paste0(file, "02_GenData/03_SoepFiles/hgen.rds"))
```

@tbl-HgenID shows a sample of household-level identifiers we extract from the HGEN file. The full data-frame contains `r ncol(hgen)` variables and `r comma(nrow(hgen))` observations across `r comma(length(unique(hgen$hid)))` households spanning between 2005 and 2018. *hid* and *year* are analogous to the **pequiv** file.

-   *Owner* is an indicator variable based on four categories (1 -- Owner, 2 -- Main Tenant, 3 -- Sub-Tenant, 4 -- Tenant, 5 -- Living in a home).
-   *FreeRent* is a dummy variable equal to one if the family does not pay rent.
-   *YearMoved* refers to the year the family moved to the household.
-   *HouseSize* Is the size of the dwelling in square meters.

::: panel-tabset
## Household Indentifiers

```{r}
#| label: tbl-HgenID
#| tbl-cap: Household identifiers HGEN file
#| tbl-cap-location: top
#| echo: true
kbl(select(hgen, hid, year, owner, FreeRent, YearMoved, HouseSize) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```

## Household Infrastructure

```{r}
#| label: tbl-HgenInf
#| tbl-cap: Household identifiers HGEN file
#| tbl-cap-location: top
#| echo: true
kbl(select(hgen, hid, year, basement, garden, elevator, balcony) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```

## Household Energy

```{r}
#| label: tbl-HgenRen
#| tbl-cap: Household energy efficiency investments
#| tbl-cap-location: top
#| echo: true
kbl(select(hgen, hid, year, CentralFloorHeating, ThermalInsulation, DoubleGlazing, AlternativeEnergy, pv, boiler) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```

## Household Costs

```{r}
#| label: tbl-HgenCosts
#| tbl-cap: Household energy costs
#| tbl-cap-location: top
#| echo: true
kbl(select(hgen, hid, year, PowerCosts, OtherUtilityCosts, GasCosts, WarmWaterCosts) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```
:::

@tbl-HgenInf contains different infrastructure characteristics of the dwelling. All variables are indicator dummies of basement, garden, elevator, or balcony infrastructure.

@tbl-HgenRen includes a set of indicator variables regarding household investments in Energy infrastructure or appliances. The indicator variables come from answers to the question **What amenities does your dwelling have? Does it have -** central floor heating (*CentralFloorHeating - 1984-2014*), floor heating (*FloorHeating - since 2014*), thermal insulation in the facade, roof, or basement (*ThermalInsulation - Since 2015*), air conditioner (*ac - Since 2007*), solar energy system (*pv - Since 2007*), other alternative energy sources like geothermal or heat pump (*AlternativeEnergy - Since 2009*), boiler (*boiler - 1991-2013*), or windows with at least double glazing (*DoubleGlazing - Since 2015*).

@tbl-HgenCosts includes a set of numeric variables on the household's energy costs:

-   *WarmWaterCost*: contains the heating costs of tenants. The number comes from answers to the question **What were the heating costs, including hot water, in the last calendar year?**. Until 2013 (wave BD), the SOEP only surveyed heating costs for tenants. After 2013, it asked all SOEP individuals. In 2015 (wave BF), respondents stated their costs for different energy sources (district heating, gas, liquefied gas, electricity, heating oil, coal, wood, biomass, solar, and geothermal) and whether they used them for heating, warm water, cooking, or electronic devices. This change decreased the *WarmWaterCost* variable in the BF wave vs. other years.
-   *PowerCosts*: is a numeric variable with the electricity costs (excluding heating when applicable) asked since 2010. The exact questionnaire question is; **What were your electricity costs in the last calendar year?** The SOEP only asks this question to tenants if they pay rent. However, from 2016, it asked all tenants whether they paid rent or not.
-   *GasCosts*: states the monthly costs of gas not used for heating in Euros. Gas costs were only collected in 2014 (wave BE).
-   *OtherUtilityCosts*: are answers to the question; how much did you pay in the last calendar year for water, garbage removal, street cleaning, and other additional costs not mentioned above?

### Individual panel

```{r}
#| echo: false
file = gsub("WebsiteABM", "", getwd())
soep = read_rds(paste0(file, "02_GenData/03_SoepFiles/RawSoep.rds"))
```

Once we load the **hgen** and **pequiv** files, we merge them and construct a final panel data of SOEP individuals between 2005 and 2018. The data set contains `r comma(nrow(soep))` observations across `r comma(length(unique(soep$pid)))` individuals and `r comma(length(unique(soep$hid)))` households. On average, each person remains in the panel `r soep |> group_by(pid) |> summarise(count = n()) |> ungroup() |> summarise(round(mean(count),1))` years. The data set contains 57 different variables (each of which is defined in the glossary section).

When merging the household and individual-level data. We perform different checks and create additional variables.

-   We change all negative values (NAs) from the raw SOEP data to R NA format.
-   Transform the indicator variables with *"Ja" or "Nein" structure* to binary dummies.
-   Transform net and gross income (income, GrossIncome) from Euros to Thousand of Euros.
-   Impute the ownership and lodge indicators in cases with missing data if the household does not report moving.
-   Keep only the industry of the household head.
-   Assume that if the dwelling has a garden it is a house.
-   Assume that if the dwelling has an elevator it is a flat.
-   Transform the PV data from one when bought to one if owned.
-   Determine the age of the panel -- **PanelYear**.
-   Simplify the lodge identifier to only "House" or "Flat".

::: panel-tabset
## Individual covariates

```{r}
#| label: tbl-SoepA
#| tbl-cap: Individual Covariates in the full sample
#| tbl-cap-location: top
#| echo: true
kbl(soep |> select(pid, hid, year, head, age, sex, education) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```

## Employment

```{r}
#| label: tbl-SoepB
#| tbl-cap: Employmenr Covariates in the full sample
#| tbl-cap-location: top
#| echo: true
kbl(soep |> select(pid, hid, year, employment, occupation, income, GrossIncome) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```

## Dwelling

```{r}
#| label: tbl-SoepC
#| tbl-cap: Employmenr Covariates in the full sample
#| tbl-cap-location: top
#| echo: true
kbl(ungroup(soep) |> select(pid, hid, year, YearMoved, owner, FreeRent, lodge, NewestConstDate, OldestConstDate) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```

## Dwelling Charac.

```{r}
#| label: tbl-SoepD
#| tbl-cap: Dwelling characteristics Covariates in the full sample
#| tbl-cap-location: top
#| echo: true
kbl(ungroup(soep) |> select(pid, hid, year, HouseSize, basement, garden, elevator, balcony) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```

## Energy Efficiency

```{r}
#| label: tbl-SoepE
#| tbl-cap: Energy Efficiency Technologies
#| tbl-cap-location: top
#| echo: true
kbl(ungroup(soep) |> select(pid, hid, year, ac, FloorHeating, CentralFloorHeating, ThermalInsulation, AlternativeEnergy, pv, boiler) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```

## Energy Costs

```{r}
#| label: tbl-SoepF
#| tbl-cap: Energy Efficiency Technologies
#| tbl-cap-location: top
#| echo: true
kbl(ungroup(soep) |> select(pid, hid, year, PowerCosts, OtherUtilityCosts, GasCosts, WarmWaterCosts) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```
:::

### HCONSUM

We use the 2010 SOEP consumption module to estimate the consumption propensity of German households. The SOEP consumption module, or "hconsum," was implemented as part of the 31st SOEP wave in 2010. The goal of *hconsum* is to allow researchers to understand the relationship between welfare, income, and disposable income -- whereas consumption characterizes the actual current living standard, income describes the potential command over resources. For a complete review of the SOEP consumption module, we refer the reader to @Grabka2013. In this chapter, we only highlight the its main characteristics.

Usually, consumption data takes one of two forms; consumption journals or representative surveys. The goal of consumption journals is to keep track of all daily expenditures across a cross-section of representative households to understand consumption patterns. Once there is enough data, researchers aggregate the items into categories to assess the main components of households' income use. . Representative surveys, on the other hand, study typical consumption instead of consumption at a given time. The core idea is that asking for a relevant set of common consumption goods can act as a good proxy for total consumption.

In the 2010 hconsum module, the SOEP adopted the idea of consumption goods to approximate total consumption. In total, they collected twenty-four different consumption categories spanning from food expenditures to insurance costs.

There were a series of methodological challenges while collecting the consumption data. First, there were inconsistencies between reported monthly and yearly expenditures. In total, the share of inconsistencies is smaller than one percent. Next, there were missing values (usually around 2-4%) across several categories. Finally, there was clear evidence of heaping (coarse reporting of continuous values).

The SOEP solves the inconsistency between monthly and yearly data with the following process. First, it computes the percentiles of consumption according to the reported monthly and annual values. Second, compare this percentage rank to the percentiles of the household net income. In case of inconsistent monthly and yearly information, the SOEP assigns the consumption value of the category whose percentile is the closest to the income distribution.

For missing data, the SOEP uses multiple imputation methods. However, instead of assigning only one value per income category, the SOEP assign five different values to reflect the uncertainty in the imputation process. Particularly, the SOEP impute the missing values through multivariate imputation by chained equations (MICE) [@VanBuren1999].

For heaping, the SOEP adjust the heaped data by approximating its true distribution with an theoretical distribution of consumption behaviour. After several theoretical exercise, the SOEP chooses the gamma and generalized beta distribution of the second kind (GB2) to approximate the true distribution of consumption data. @eq-gb2 contains the mathematical formula behind the GB2 distribution. In it, $x$ is consumption, $B(b,q)$ the beta function, and a,b,p, and q positive parameters.

$$
f(x) = ax^{ap-1}\Big[b^{ab} B(p,q)\Big(1 + (\frac{x}{b})^a\Big)^{p+q}\Big]^{-1}
$$ {#eq-gb2}

```{r}
#| echo: false
file = gsub("WebsiteABM", "", getwd())
data = read_rds(paste0(file, "02_GenData/03_SoepFiles/hconsum.rds"))
codebook = read_excel(paste0(file, "01_RawData/02_codebooks/codebook.xlsx"), sheet = "hconsum2")
```

In @tbl-ConsA, we show a sample of the consumption data for daily expenditures. @tbl-ConsB contains a similar exercise for housing costs, @tbl-ConsC for financial burdens, and @tbl-ConsD for other income uses. All values are in thousand of Euros per year and come from averaging the five different imputations of the SOEP consumption module across categories.

::: panel-tabset
## Daily Expenditures

```{r}
#| label: tbl-ConsA
#| tbl-cap: Sample of the consumption module (daily expenditures)
#| tbl-cap-location: top
#| echo: true
kbl(data |> select(hid, Food, Clothes, Transport, Coms, Leisure, Cleaning) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```

## Housing expenditures

```{r}
#| label: tbl-ConsB
#| tbl-cap: Sample of the consumption module (Housing)
#| tbl-cap-location: top
#| echo: true
kbl(data |> select(hid, Rent, Mortgage, Housing, Heating, Power, Utilities, Furniture) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```

## Financial expenditures

```{r}
#| label: tbl-ConsC
#| tbl-cap: Sample of the consumption module (Housing)
#| tbl-cap-location: top
#| echo: true
kbl(data |> select(hid, Insurance, Loans, Mortgage) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```

## Other expenditures

```{r}
#| label: tbl-ConsD
#| tbl-cap: Sample of the consumption module (Other)
#| tbl-cap-location: top
#| echo: true
kbl(data |> select(hid, Alimony, ChildCare, Culture, Education, Health, Holidays, Other) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```
:::

In @fig-ShareConsumption, we look at the difference in consumption values and composition across the SOEP income deciles. For this, we aggregate all consumption items into eight categories; Daily expenditures, health, financial, transport, heating, power, housing, and others. There are apparent differences in the amount of money used for consumption across income groups. For instance, in the highest and lowest deciles of the income distribution, households spend 14,900 and 4,460 Euros per year, respectively. @fig-ShareConsumption portrays a clearer picture of the composition of these expenditures across income groups. While the share of financial and health costs grows with income, heating and power expenditures decrease. @fig-HeatCon clearly shows these trends with a heat map of consumption category by income decile. The expenditure share of housing, daily expenses, and health remains relatively stable; financial, transport and health costs increase with income; and heating-power expenses decrease. In @fig-IncToCon, we plot the ratio of average income to consumption by income decile. As expected, the consumption income ratio drops as we become more well-off. In the lowest income decile, families spend, on average, 34% more than their average income, meaning that they either live from debt or receive additional and unreported income from other sources. Once we move to the second income decile, the ratio reaches parity and implies that persons in this decile earn as much as they spend. Finally, in @fig-IncToConHeat, we plot the heat map of consumption income ratios across different categories.


::: panel-tabset
## Consumption
```{r}
#| label: fig-RawConsumption
#| fig-cap: Yearly consumption by concept in thousand euros (SOEP 2010)
#| fig-cap-location: top
#| echo: true

# Divide into income deciles 
data = mutate(data, decile = ntile(income, 10)) |> 
  mutate(decile = as_factor(decile))
# Create the data for the plot
plot= select(data, -total, -income, -owner) %>% 
  gather(var, value, -hid, -decile)%>% 
  left_join(., codebook, by = c("var" = "concept")) |> 
  group_by(decile, group) |> 
  summarise(value = mean(value)) |> 
  mutate(group = fct_reorder(factor(group), value, .desc = F)) |> 
  group_by(decile) |> mutate(total = sum(value))
# Plot total expenditures by concept
ggplot(plot) +
  geom_bar(aes(x = decile, y = value, fill = group), stat = "identity") +
  scale_fill_viridis(discrete = T, option = "E") +
  theme_economist() %+replace% theme(legend.title = element_blank()) +
  labs(x = "Income Decile", y = "")
```
## Con. Share
```{r}
#| label: fig-ShareConsumption
#| fig-cap: Consumption share by concept (SOEP 2010)
#| fig-cap-location: top
#| echo: true

# Divide into income deciles 
data = mutate(data, decile = ntile(income, 10)) |> 
  mutate(decile = as_factor(decile))
# Create the data for the plot
plot = select(data, -total, -income, -owner) %>% 
  gather(var, value, -hid, -decile) %>% 
  left_join(., codebook, by = c("var" = "concept")) |> group_by(decile, group) |> 
  summarise(value = mean(value)) |> group_by(decile) |> 
  mutate(share = (value/sum(value))*100)  |> 
  mutate(group = fct_reorder(factor(group), share, .desc = F))
# Plot total expenditures by concept
ggplot(plot) +
  geom_bar(aes(x = decile, y = share, fill = group), stat = "identity") +
  scale_fill_viridis(discrete = T, option = "E") +
  theme_economist() %+replace% theme(legend.title = element_blank()) +
  labs(x = "", y = "")
```

## Con. Matrix
```{r}
#| label: fig-HeatConInc
#| fig-cap: Share of total consumption across categories
#| fig-cap-location: top
#| echo: true

# Divide into income deciles 
data = mutate(data, decile = ntile(income, 10)) |> 
  mutate(decile = as_factor(decile))
# Create the data for the plot
plot = select(data, -total, -income, -owner) %>% 
  gather(var, value, -hid, -decile) %>% 
  left_join(., codebook, by = c("var" = "concept")) |> group_by(decile, group) |> 
  summarise(value = mean(value)) |> group_by(decile) |> 
  mutate(share = (value/sum(value))*100)  |> 
  mutate(group = fct_reorder(factor(group), share, .desc = F))
# Plot total expenditures by concept
ggplot(plot) +
  geom_tile(aes(x = decile, y = group, fill = share), alpha = 0.75) +
  geom_text(aes(x = decile, y = group, label = paste0(round(share, 1), "%"))) +
  scale_fill_viridis(discrete = F, begin = 0, end = 0.6, option = "D") +
  theme_economist() %+replace% theme(legend.title = element_blank()) +
  labs(x = "", y = "") + guides(fill = F)
```

## Con/Income
```{r}
#| label: fig-IncToCon
#| fig-cap: Consumption share of income (SOEP 2010)
#| fig-cap-location: top
#| echo: true

# Divide into income deciles 
data = mutate(data, decile = ntile(income, 10)) |> 
  mutate(decile = as_factor(decile))
# Create the data for the plot
plot = select(data, total, income, decile) |> 
  group_by(decile) |> 
  summarise(consumption = mean(total), income = mean(income)) |> 
  mutate(share = (consumption/income)*100)
# Plot total expenditures by concept
ggplot(plot) +
  geom_bar(aes(x = decile, y = share, fill = share), stat = "identity") +
  geom_text(aes(x = decile, y = share, label = paste0(round(share,1), "%")), vjust = -0.5) +
  scale_fill_viridis(discrete = F, option = "E", direction = -1) +
  theme_economist() + guides(fill = F) +
  labs(x = "", y = "")  
```

## Con/Income matrix
```{r}
#| label: fig-IncToConHeat
#| fig-cap: Consumption share of income across categories
#| fig-cap-location: top
#| echo: true

# Divide into income deciles 
data = mutate(data, decile = ntile(income, 10)) |> 
  mutate(decile = as_factor(decile))
# Create the data for the plot
plot = select(data, -total, -owner) %>% 
  gather(var, value, -hid, -decile, -income) %>% 
  left_join(., codebook, by = c("var" = "concept")) |> group_by(decile, group, var) |> 
  summarise(value = mean(value, na.rm = T), income = mean(income, na.rm = T)) |> 
  group_by(decile, group, income) |> summarise(total = sum(value)) |> group_by(decile, group) |> 
  mutate(share = (total/income)*100)  |> 
  mutate(group = fct_reorder(factor(group), total, .desc = T))

# Plot total expenditures by concept
ggplot(plot) +
  geom_tile(aes(x = decile, y = reorder(group, share), fill = share), alpha = 0.75) +
  geom_text(aes(x = decile, y = group, label = paste0(round(share, 1), "%"))) +
  scale_fill_viridis(discrete = F, begin = 0, end = 0.6, option = "D") +
  theme_economist() %+replace% theme(legend.title = element_blank()) +
  labs(x = "", y = "") + guides(fill = F)
```
:::

### Estimating the distribution of power costs by income decile

Next, we use the information on income and power cost from the sub-set of renters to look at the relationship between annual power costs and income. For this, we divide the data set into ten different income groups based on the deciles of the income distribution and estimate the average and standard deviation of income and power costs in each decile.

@tbl-PowerCostDist contains a sample of the final data. *IncomeGroup* refers to the income decile. *IncAvg* is the average yearly income in thousands of Euros. *PowerCostAvg* is the average yearly power bill in Euros. *IncSD* is the standard deviation of annual income. And *PowerCostSd* the analogous for power costs. @fig-PowerCostsDensity contains the density (Log) function of annual Power Costs across different income deciles. As expected, the density is normally distributed with higher mean values for more wealthy households.

::: panel-tabset
## Data Set

```{r}
#| label: tbl-PowerCostDist
#| tbl-cap: Energy Efficiency Technologies
#| tbl-cap-location: top
#| echo: true
# Load Data
file = gsub("WebsiteABM", "", getwd())
data = read_rds(paste0(file, "02_GenData/03_SoepFiles/IncomePowerDeciles.rds"))
# Show the table
kbl(ungroup(data) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```

## Descriptives

![Density function of Power Costs across Income Deciles](99_figures/PowerCostsDensity){#fig-PowerCostsDensity}
:::

### Mapping the income deciles of the SOEP to the "Bundesbank" categories

To assign the propensity to consume across SOEP income deciles, we use statistics from the German Central Bank (Deutsches Bundesbank). The Bank provides propensities to consume across twelve income categories. For instance, the propensity to consume for persons with monthly incomes between 900`r symbol("euro")` and 1,300`r symbol("euro")` is x% while for individuals between 10,000`r symbol("euro")` and 80,000`r symbol("euro")` y%. <!--# Severin, can you add these percentages? -->

Given that we initialize ABM-REN across income deciles, we map the consumption propensity data from the Bundesbank with the SOEP income distribution. @tbl-AmtDeciles shows a mapping sample between the "Bank" categories and the SOEP income distribution. As an example, the first row shows that the category between zero`r symbol("euro")` and five hundred`r symbol(euro)` is within the zero and third percentile of the SOEP income distribution.

```{r}
#| label: tbl-AmtDeciles
#| tbl-cap: Energy Efficiency Technologies
#| tbl-cap-location: top
#| echo: true
# Load Data
file = gsub("WebsiteABM", "", getwd())
data = read_rds(paste0(file, "02_GenData/03_SoepFiles/AmtMap.rds")) |> arrange(LowPer, desc = T)
# Show the table
kbl(ungroup(data) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```

#### Estimating the propensity to consume across Bundesbank income categories

Next, we use consumption data from the SOEP to approximate the propernsity to consume distribution for the different income categories of the Bundesbank.

::: panel-tabset
## Data Set

```{r}
#| label: tbl-ConDensity
#| tbl-cap: Energy Efficiency Technologies
#| tbl-cap-location: top
#| echo: true
# Load Data
file = gsub("WebsiteABM", "", getwd())
data = read_rds(paste0(file, "02_GenData/03_SoepFiles/ConsumptionDeciles.rds"))
# Show the table
kbl(ungroup(data) %>% head(.)) %>% 
  kable_classic(full_width = T, html_font = "Cambria") %>% 
  kable_styling(bootstrap_option = c("hover"))
```

## Descriptives

![Density function - propensity to consume across Bundesban income categories](99_figures/ConsumptionDensity){#fig-ConsumptionDensity}
:::

### Estimating the probability of adoption conditional on ownership and dwelling class

### Variables Glossary

::: incremental
-   ***pid:*** This variable provides unique identification for each individual ever surveyed in the SOEP.
-   ***hid:*** This variable links individuals to the households they were living in at the time of the interview. The SOEP provides yearly household identification numbers.
-   ***sample:*** This variable indicates from which sub sample an individual in the SOEP is drawn. The variable contain the following levels
-   ***age:*** Indicates the age of the individual
-   ***sex:*** Indicates the gender of the individual (1 -- Male and 2 -- Female)
-   ***MaritalStatus:*** Indicates the marital status of the individual (1 -- Married, 2 -- Single, 3 -- Widowed, 4 -- Divorced, 5 -- Separated, 6 and 7 --- Not with partner)
-   ***Npersons:*** Refers to the number of persons in the household
-   ***Nkids:*** Number of kids in the household
-   ***education:*** Years of education
-   ***employment:*** Indicator variable equal to one if the person is employed
-   ***occupation:*** Individual's occupation according to the ISCO-88 occupation code (ISCO = International Classification of Occupations)
-   ***industry1:*** Individual's two-digit industry code based on ten categories (1 -- Agriculture, 2 -- Energy, 3 -- Mining, 4 -- Manufacturing, 5 -- Construction, 6 -- Trade, 7 -- Transport, 8 -- Bank and Insurance, 9 -- Services).
-   ***industry2:*** Individual's NACE industry code
-   ***state:*** German state of residence
-   ***region:*** German region of residence
-   ***income:*** Household post-government income (after taxes and government transfers for all persons in the household)
-   ***GrossIncome:*** Household pre-government income
-   ***head:*** Individual's relationship to household head (1 -- Head, 2 -- Partner, 3 -- Child, 4 -- Relative, 5 -- Non Relative)
:::
