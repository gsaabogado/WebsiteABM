[
  {
    "objectID": "01_about.html",
    "href": "01_about.html",
    "title": "About",
    "section": "",
    "text": "The website contains four primary sections to accompany the study:\n\nSOEP Data – Includes a description of all the data files of the German Socio-economic Panel Study (SOEP). It is divided into five subsections\n\n\n\nHousehold Characteristics\nTechnology Adoption\nWealth\nGallup Measures of Environmental Attitudes\n\n\n\nDescriptives SOEP – contains descriptive statistics on the SOEP Data\n\n\n\nHousehold Characteristics\nTechnology Adoption\n\n\n\nTheoretical Model – includes the mathematical description and assumptions of the model\nMathematical model – presents and discusses the python environment where we implement ABM-ren.\n\n\n\n\n\n\n\nNote\n\n\n\nConsider that all sections contain the R-code necessary to replicate the website’s figures, tables, and overall results. Regarding the construction of the data sets, we share the link to the dropbox repository alongside instructions to load the raw data files and transform them into the panel data we use for the optimization and the empirical section."
  },
  {
    "objectID": "01_about.html#raw-data-files",
    "href": "01_about.html#raw-data-files",
    "title": "About",
    "section": "Raw data files",
    "text": "Raw data files\nAs previously mentioned, the folder 01_RawData contains all the raw files. It is divided into N different repositories\n\n\n01_schools includes all files related to school absences and school characteristics in New York City\n02_AQI has the data on the air quality index forecast from the NYSDEC and the AQI measures from the EPA\n03_weather contains several data files of weather covariates\n04_shp is a repository of shape (or spatial) files\n05_dem includes data on neighbourhood-level socio-demographic characteristics from the US Census Buro"
  },
  {
    "objectID": "02_data.html",
    "href": "02_data.html",
    "title": "Data",
    "section": "",
    "text": "In this section we describe at length the main characteristics and scientific processing of the data files we use in the ABM-REN model.\nThe section is divided into three main subsections:"
  },
  {
    "objectID": "02_data.html#data-structure",
    "href": "02_data.html#data-structure",
    "title": "Data",
    "section": "Data Structure",
    "text": "Data Structure\nAll of our variables are in one of two R formats; numeric or haven-labelled. Haven labelled format is similar to STATA (or SPSS) labelled data (For more information we refer the reader to the online vignete of the haven package).\nThe R-labelled class (part of the haven package) allows us to associate arbitrary labels to numeric or character vectors. Note that the goal of labelled files is only to include the description of categorical vectors in the SOEP data. For instance, when printing one labelled variable, the output consists of a vector of values and a data frame linking values and labels.\nIt is essential to clarify that researchers must transform haven-labelled data formats into numeric or factor variables before using them in econometric, machine learning, or optimization models.\nWe keep the haven-labelled format in the raw files as it allows researchers to directly understand the values related to each numeric identifier of categorical variables in the SOEP data.\nAs an example, we show the gender-labelled variable. The ouput contains a title identifier Gender of Individual, a vector of numeric values (i.e., 2,1,2,1,1,2), and the data frame linking values to labels.\n\n\n\n\n\n<labelled<double>[6]>: Gender of Individual\n[1] 2 1 2 1 1 2\n\nLabels:\n value                                                 label\n    -6 [-6] Fragebogenversion mit geaenderter Filterfuehrung\n    -5             [-5] In Fragebogenversion nicht enthalten\n    -4                     [-4] Unzulaessige Mehrfachantwort\n    -3                                     [-3] nicht valide\n    -2                                  [-2] trifft nicht zu\n    -1                                     [-1] keine Angabe\n     1                                            [1] Male 1\n     2                                          [2] Female 2\n\n\nAlso note that, in general, all negative entries refer to missing values for different reasons, e.g., the question was not part of that year’s questionnaire or invalid answers."
  },
  {
    "objectID": "02_data.html#pequiv",
    "href": "02_data.html#pequiv",
    "title": "Data",
    "section": "PEQUIV",
    "text": "PEQUIV\nTable 1 shows a sample of individual-level characteristics we extract from the PEQUIV file. It consists of 19 variables and 547,704 observations between 2005 and 2018. Each variable is either in a numeric or haven-labelled format. The data frame contains the individual and household IDs (pid and hid). year refers to the year of the interview. head is an indicator variable on the relationship between pid and the household head (1 = head, 2 = partner, 3 = child, 4 = relative, and 5 = non-relative). age is the average age. sex the gender (1 - Male; 2- Female). And, education, the total years of education. Table 2 includes data on the spatial location of the household. Because we are working with the open version of the SOEP, we can only identify the state and region where the household is located.\n\nIndividualSpatialEmploymentHousehold\n\n\n\n\nShow the Code\n# Show the data set\nkbl(select(pequiv, pid, hid, year, head, sex, age, education) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 1:  Individual characteristics from the PEQUIV file \n \n  \n    pid \n    hid \n    year \n    head \n    sex \n    age \n    education \n  \n \n\n  \n    201 \n    27 \n    2005 \n    1 \n    2 \n    79 \n    10.5 \n  \n  \n    203 \n    60313 \n    2005 \n    1 \n    1 \n    45 \n    18.0 \n  \n  \n    602 \n    60 \n    2005 \n    1 \n    2 \n    47 \n    18.0 \n  \n  \n    603 \n    60 \n    2005 \n    2 \n    1 \n    59 \n    -2.0 \n  \n  \n    604 \n    60 \n    2005 \n    3 \n    1 \n    15 \n    -1.0 \n  \n  \n    605 \n    60 \n    2005 \n    3 \n    2 \n    9 \n    -1.0 \n  \n\n\n\n\n\n\n\n\n\n\nShow the Code\n# Show the data set\nkbl(select(pequiv, pid, hid, year, state, region) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 2:  Spatial variables from the PEQUIV file \n \n  \n    pid \n    hid \n    year \n    state \n    region \n  \n \n\n  \n    201 \n    27 \n    2005 \n    11 \n    1 \n  \n  \n    203 \n    60313 \n    2005 \n    11 \n    1 \n  \n  \n    602 \n    60 \n    2005 \n    5 \n    1 \n  \n  \n    603 \n    60 \n    2005 \n    5 \n    1 \n  \n  \n    604 \n    60 \n    2005 \n    5 \n    1 \n  \n  \n    605 \n    60 \n    2005 \n    5 \n    1 \n  \n\n\n\n\n\n\n\n\n\n\nShow the Code\n# Show the data set\nkbl(select(pequiv, pid, hid, year, employment, occupation, industry1) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 3:  Employment variables from the PEQUIV file \n \n  \n    pid \n    hid \n    year \n    employment \n    occupation \n    industry1 \n  \n \n\n  \n    201 \n    27 \n    2005 \n    0 \n    0 \n    0 \n  \n  \n    203 \n    60313 \n    2005 \n    1 \n    2131 \n    9 \n  \n  \n    602 \n    60 \n    2005 \n    0 \n    2331 \n    9 \n  \n  \n    603 \n    60 \n    2005 \n    0 \n    -2 \n    -2 \n  \n  \n    604 \n    60 \n    2005 \n    -1 \n    -2 \n    -1 \n  \n  \n    605 \n    60 \n    2005 \n    -1 \n    -2 \n    -1 \n  \n\n\n\n\n\n\n\n\n\n\nShow the Code\n# Show the data set\nkbl(select(pequiv, pid, hid, year, Npersons, Nkids, income, GrossIncome) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 4:  Household variables from the PEQUIV file \n \n  \n    pid \n    hid \n    year \n    Npersons \n    Nkids \n    income \n    GrossIncome \n  \n \n\n  \n    201 \n    27 \n    2005 \n    1 \n    0 \n    7648 \n    209 \n  \n  \n    203 \n    60313 \n    2005 \n    1 \n    0 \n    18800 \n    7550 \n  \n  \n    602 \n    60 \n    2005 \n    4 \n    2 \n    47146 \n    68521 \n  \n  \n    603 \n    60 \n    2005 \n    4 \n    2 \n    47146 \n    68521 \n  \n  \n    604 \n    60 \n    2005 \n    4 \n    2 \n    47146 \n    68521 \n  \n  \n    605 \n    60 \n    2005 \n    4 \n    2 \n    47146 \n    68521 \n  \n\n\n\n\n\n\n\n\n\nTable 3 contains employment-related covariates. employment is a dummy variable equal to one if the person is currently employed. occupation is the person’s occupation according to the International Classification of Occupations Code (ISCO). For instance, code 5,160 refers to protective service workers. industry1 is a two-digit industry code based on ten categories (1 – Agriculture, 2 – Energy, 3 – Mining, 4 – Manufacturing, 5 – Construction, 6 – Trade, 7 – Transport, 8 – Bank and Insurance, 9 – Services).\nTable 4 includes a set of household-level controls. While Npersons and Nkids are the number of persons and kids in the household, income and GrossIncome are the household net and gross income in Euros per year."
  },
  {
    "objectID": "02_data.html#hgen",
    "href": "02_data.html#hgen",
    "title": "Data",
    "section": "HGEN",
    "text": "HGEN\n\n\n\nTable 5 shows a sample of household-level identifiers we extract from the HGEN file. The full data-frame contains 34 variables and 213,595 observations across 40,852 households spanning between 2005 and 2018. hid and year are analogous to the pequiv file.\n\nOwner is an indicator variable based on four categories (1 – Owner, 2 – Main Tenant, 3 – Sub-Tenant, 4 – Tenant, 5 – Living in a home).\nFreeRent is a dummy variable equal to one if the family does not pay rent.\nYearMoved refers to the year the family moved to the household.\nHouseSize Is the size of the dwelling in square meters.\n\n\nHousehold IndentifiersHousehold InfrastructureHousehold EnergyHousehold Costs\n\n\n\n\nShow the Code\nkbl(select(hgen, hid, year, owner, FreeRent, YearMoved, HouseSize) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 5:  Household identifiers HGEN file \n \n  \n    hid \n    year \n    owner \n    FreeRent \n    YearMoved \n    HouseSize \n  \n \n\n  \n    27 \n    2005 \n    2 \n    -2 \n    1994 \n    43 \n  \n  \n    60 \n    2005 \n    1 \n    -2 \n    1994 \n    130 \n  \n  \n    94 \n    2005 \n    2 \n    -2 \n    2002 \n    48 \n  \n  \n    124 \n    2005 \n    2 \n    -2 \n    2002 \n    36 \n  \n  \n    159 \n    2005 \n    2 \n    1 \n    1990 \n    120 \n  \n  \n    167 \n    2005 \n    2 \n    -2 \n    2000 \n    83 \n  \n\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(select(hgen, hid, year, basement, garden, elevator, balcony) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 6:  Household identifiers HGEN file \n \n  \n    hid \n    year \n    basement \n    garden \n    elevator \n    balcony \n  \n \n\n  \n    27 \n    2005 \n    1 \n    2 \n    -8 \n    2 \n  \n  \n    60 \n    2005 \n    1 \n    1 \n    -8 \n    1 \n  \n  \n    94 \n    2005 \n    1 \n    2 \n    -8 \n    1 \n  \n  \n    124 \n    2005 \n    2 \n    2 \n    -8 \n    1 \n  \n  \n    159 \n    2005 \n    2 \n    2 \n    -8 \n    2 \n  \n  \n    167 \n    2005 \n    1 \n    2 \n    -8 \n    1 \n  \n\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(select(hgen, hid, year, CentralFloorHeating, ThermalInsulation, DoubleGlazing, AlternativeEnergy, pv, boiler) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 7:  Household energy efficiency investments \n \n  \n    hid \n    year \n    CentralFloorHeating \n    ThermalInsulation \n    DoubleGlazing \n    AlternativeEnergy \n    pv \n    boiler \n  \n \n\n  \n    27 \n    2005 \n    1 \n    -8 \n    -8 \n    -8 \n    -8 \n    1 \n  \n  \n    60 \n    2005 \n    1 \n    -8 \n    -8 \n    -8 \n    -8 \n    1 \n  \n  \n    94 \n    2005 \n    1 \n    -8 \n    -8 \n    -8 \n    -8 \n    1 \n  \n  \n    124 \n    2005 \n    1 \n    -8 \n    -8 \n    -8 \n    -8 \n    1 \n  \n  \n    159 \n    2005 \n    1 \n    -8 \n    -8 \n    -8 \n    -8 \n    1 \n  \n  \n    167 \n    2005 \n    1 \n    -8 \n    -8 \n    -8 \n    -8 \n    1 \n  \n\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(select(hgen, hid, year, PowerCosts, OtherUtilityCosts, GasCosts, WarmWaterCosts) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 8:  Household energy costs \n \n  \n    hid \n    year \n    PowerCosts \n    OtherUtilityCosts \n    GasCosts \n    WarmWaterCosts \n  \n \n\n  \n    27 \n    2005 \n    -8 \n    20 \n    -5 \n    30 \n  \n  \n    60 \n    2005 \n    -8 \n    -2 \n    -5 \n    -2 \n  \n  \n    94 \n    2005 \n    -8 \n    77 \n    -5 \n    49 \n  \n  \n    124 \n    2005 \n    -8 \n    42 \n    -5 \n    40 \n  \n  \n    159 \n    2005 \n    -8 \n    -1 \n    -5 \n    -1 \n  \n  \n    167 \n    2005 \n    -8 \n    137 \n    -5 \n    5 \n  \n\n\n\n\n\n\n\n\n\nTable 6 contains different infrastructure characteristics of the dwelling. All variables are indicator dummies of basement, garden, elevator, or balcony infrastructure.\nTable 7 includes a set of indicator variables regarding household investments in Energy infrastructure or appliances. The indicator variables come from answers to the question What amenities does your dwelling have? Does it have - central floor heating (CentralFloorHeating - 1984-2014), floor heating (FloorHeating - since 2014), thermal insulation in the facade, roof, or basement (ThermalInsulation - Since 2015), air conditioner (ac - Since 2007), solar energy system (pv - Since 2007), other alternative energy sources like geothermal or heat pump (AlternativeEnergy - Since 2009), boiler (boiler - 1991-2013), or windows with at least double glazing (DoubleGlazing - Since 2015).\nTable 8 includes a set of numeric variables on the household’s energy costs:\n\nWarmWaterCost: contains the heating costs of tenants. The number comes from answers to the question What were the heating costs, including hot water, in the last calendar year?. Until 2013 (wave BD), the SOEP only surveyed heating costs for tenants. After 2013, it asked all SOEP individuals. In 2015 (wave BF), respondents stated their costs for different energy sources (district heating, gas, liquefied gas, electricity, heating oil, coal, wood, biomass, solar, and geothermal) and whether they used them for heating, warm water, cooking, or electronic devices. This change decreased the WarmWaterCost variable in the BF wave vs. other years.\nPowerCosts: is a numeric variable with the electricity costs (excluding heating when applicable) asked since 2010. The exact questionnaire question is; What were your electricity costs in the last calendar year? The SOEP only asks this question to tenants if they pay rent. However, from 2016, it asked all tenants whether they paid rent or not.\nGasCosts: states the monthly costs of gas not used for heating in Euros. Gas costs were only collected in 2014 (wave BE).\nOtherUtilityCosts: are answers to the question; how much did you pay in the last calendar year for water, garbage removal, street cleaning, and other additional costs not mentioned above?"
  },
  {
    "objectID": "02_data.html#hconsum",
    "href": "02_data.html#hconsum",
    "title": "Data",
    "section": "HCONSUM",
    "text": "HCONSUM\nWe use the 2010 SOEP consumption module to estimate the consumption propensity of German households. The SOEP consumption module, or “hconsum,” was implemented as part of the 31st SOEP wave in 2010. The goal of hconsum is to allow researchers to understand the relationship between welfare, income, and disposable income – whereas consumption characterizes the actual current living standard, income describes the potential command over resources. For a complete review of the SOEP consumption module, we refer the reader to Marcus, Siegers, and Grabka (2013). In this chapter, we only highlight the its main characteristics.\nUsually, consumption data takes one of two forms; consumption journals or representative surveys. The goal of consumption journals is to keep track of all daily expenditures across a cross-section of representative households to understand consumption patterns. Once there is enough data, researchers aggregate the items into categories to assess the main components of households’ income use. . Representative surveys, on the other hand, study typical consumption instead of consumption at a given time. The core idea is that asking for a relevant set of common consumption goods can act as a good proxy for total consumption.\nIn the 2010 hconsum module, the SOEP adopted the idea of consumption goods to approximate total consumption. In total, they collected twenty-four different consumption categories spanning from food expenditures to insurance costs.\nThere were a series of methodological challenges while collecting the consumption data. First, there were inconsistencies between reported monthly and yearly expenditures. In total, the share of inconsistencies is smaller than one percent. Next, there were missing values (usually around 2-4%) across several categories. Finally, there was clear evidence of heaping (coarse reporting of continuous values).\nThe SOEP solves the inconsistency between monthly and yearly data with the following process. First, it computes the percentiles of consumption according to the reported monthly and annual values. Second, compare this percentage rank to the percentiles of the household net income. In case of inconsistent monthly and yearly information, the SOEP assigns the consumption value of the category whose percentile is the closest to the income distribution.\nFor missing data, the SOEP uses multiple imputation methods. However, instead of assigning only one value per income category, the SOEP assign five different values to reflect the uncertainty in the imputation process. Particularly, the SOEP impute the missing values through multivariate imputation by chained equations (MICE) (Van Buuren, Boshuizen, and Knook 1999).\nFor heaping, the SOEP adjust the heaped data by approximating its true distribution with an theoretical distribution of consumption behaviour. After several theoretical exercise, the SOEP chooses the gamma and generalized beta distribution of the second kind (GB2) to approximate the true distribution of consumption data. Equation 1 contains the mathematical formula behind the GB2 distribution. In it, \\(x\\) is consumption, \\(B(b,q)\\) the beta function, and a,b,p, and q positive parameters.\n\\[\nf(x) = ax^{ap-1}\\Big[b^{ab} B(p,q)\\Big(1 + (\\frac{x}{b})^a\\Big)^{p+q}\\Big]^{-1}\n\\tag{1}\\]\n\n\n\nIn Table 9, we show a sample of the consumption data for daily expenditures. Table 10 contains a similar exercise for housing costs, Table 11 for financial burdens, and Table 12 for other income uses. All values are in thousand of Euros per year and come from averaging the five different imputations of the SOEP consumption module across categories.\n\nDaily ExpendituresHousing expendituresFinancial expendituresOther expenditures\n\n\n\n\nShow the Code\nkbl(data |> select(hid, Food, Clothes, Transport, Coms, Leisure, Cleaning) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 9:  Sample of the consumption module (daily expenditures) \n \n  \n    hid \n    Food \n    Clothes \n    Transport \n    Coms \n    Leisure \n    Cleaning \n  \n \n\n  \n    60 \n    6.870 \n    1.431 \n    1.1055 \n    0.711 \n    2.0010 \n    0.00 \n  \n  \n    94 \n    3.606 \n    0.645 \n    0.3375 \n    0.528 \n    0.2745 \n    0.00 \n  \n  \n    159 \n    2.580 \n    0.792 \n    0.6990 \n    0.123 \n    1.5705 \n    2.40 \n  \n  \n    167 \n    3.576 \n    0.000 \n    1.1790 \n    0.870 \n    0.0000 \n    0.00 \n  \n  \n    230 \n    6.135 \n    0.429 \n    1.5000 \n    0.726 \n    0.7605 \n    2.40 \n  \n  \n    477 \n    0.000 \n    0.000 \n    0.1155 \n    0.000 \n    0.0000 \n    0.72 \n  \n\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(data |> select(hid, Rent, Mortgage, Housing, Heating, Power, Utilities, Furniture) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 10:  Sample of the consumption module (Housing) \n \n  \n    hid \n    Rent \n    Mortgage \n    Housing \n    Heating \n    Power \n    Utilities \n    Furniture \n  \n \n\n  \n    60 \n    4.908 \n    16.32 \n    0 \n    1.500 \n    1.1500 \n    1.0 \n    0.036 \n  \n  \n    94 \n    5.592 \n    0.00 \n    0 \n    0.576 \n    0.6100 \n    0.6 \n    0.000 \n  \n  \n    159 \n    0.000 \n    0.00 \n    0 \n    1.530 \n    0.7255 \n    0.6 \n    0.000 \n  \n  \n    167 \n    3.684 \n    0.00 \n    0 \n    1.104 \n    0.7780 \n    0.6 \n    0.000 \n  \n  \n    230 \n    4.908 \n    7.44 \n    0 \n    1.100 \n    0.5250 \n    0.5 \n    0.318 \n  \n  \n    477 \n    6.252 \n    0.00 \n    0 \n    0.948 \n    0.8200 \n    0.6 \n    0.000 \n  \n\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(data |> select(hid, Insurance, Loans, Mortgage) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 11:  Sample of the consumption module (Housing) \n \n  \n    hid \n    Insurance \n    Loans \n    Mortgage \n  \n \n\n  \n    60 \n    3.5280 \n    0.00 \n    16.32 \n  \n  \n    94 \n    0.9825 \n    0.72 \n    0.00 \n  \n  \n    159 \n    7.2255 \n    0.00 \n    0.00 \n  \n  \n    167 \n    1.3110 \n    0.00 \n    0.00 \n  \n  \n    230 \n    0.3990 \n    0.00 \n    7.44 \n  \n  \n    477 \n    0.0060 \n    0.00 \n    0.00 \n  \n\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(data |> select(hid, Alimony, ChildCare, Culture, Education, Health, Holidays, Other) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 12:  Sample of the consumption module (Other) \n \n  \n    hid \n    Alimony \n    ChildCare \n    Culture \n    Education \n    Health \n    Holidays \n    Other \n  \n \n\n  \n    60 \n    0 \n    0.96 \n    0.441 \n    0.201 \n    0.9000 \n    5.772 \n    0.402 \n  \n  \n    94 \n    0 \n    0.00 \n    0.054 \n    0.000 \n    0.3255 \n    0.000 \n    0.000 \n  \n  \n    159 \n    0 \n    0.00 \n    0.096 \n    0.000 \n    0.3465 \n    2.304 \n    0.000 \n  \n  \n    167 \n    0 \n    0.00 \n    0.000 \n    0.000 \n    0.6345 \n    0.000 \n    0.141 \n  \n  \n    230 \n    0 \n    0.00 \n    0.438 \n    0.126 \n    0.1860 \n    4.104 \n    0.699 \n  \n  \n    477 \n    0 \n    0.00 \n    0.000 \n    0.000 \n    0.5295 \n    0.000 \n    0.000 \n  \n\n\n\n\n\n\n\n\n\nIn Figure 2, we look at the difference in consumption values and composition across the SOEP income deciles. For this, we aggregate all consumption items into eight categories; Daily expenditures, health, financial, transport, heating, power, housing, and others. There are apparent differences in the amount of money used for consumption across income groups. For instance, in the highest and lowest deciles of the income distribution, households spend 14,900 and 4,460 Euros per year, respectively. Figure 2 portrays a clearer picture of the composition of these expenditures across income groups. While the share of financial and health costs grows with income, heating and power expenditures decrease. Figure 3 clearly shows these trends with a heat map of consumption category by income decile. The expenditure share of housing, daily expenses, and health remains relatively stable; financial, transport and health costs increase with income; and heating-power expenses decrease. In Figure 4, we plot the ratio of average income to consumption by income decile. As expected, the consumption income ratio drops as we become more well-off. In the lowest income decile, families spend, on average, 34% more than their average income, meaning that they either live from debt or receive additional and unreported income from other sources. Once we move to the second income decile, the ratio reaches parity and implies that persons in this decile earn as much as they spend. Finally, in Figure 5, we plot the heat map of consumption income ratios across different categories.\n\nConsumptionCon. ShareCon. MatrixCon/IncomeCon/Income matrix\n\n\n\n\nShow the Code\n# Divide into income deciles \ndata = mutate(data, decile = ntile(income, 10)) |> \n  mutate(decile = as_factor(decile))\n# Create the data for the plot\nplot= select(data, -total, -income, -owner) %>% \n  gather(var, value, -hid, -decile)%>% \n  left_join(., codebook, by = c(\"var\" = \"concept\")) |> \n  group_by(decile, group) |> \n  summarise(value = mean(value)) |> \n  mutate(group = fct_reorder(factor(group), value, .desc = F)) |> \n  group_by(decile) |> mutate(total = sum(value))\n# Plot total expenditures by concept\nggplot(plot) +\n  geom_bar(aes(x = decile, y = value, fill = group), stat = \"identity\") +\n  scale_fill_viridis(discrete = T, option = \"E\") +\n  theme_economist() %+replace% theme(legend.title = element_blank()) +\n  labs(x = \"Income Decile\", y = \"\")\n\n\n\n\n\nFigure 1: Yearly consumption by concept in thousand euros (SOEP 2010)\n\n\n\n\n\n\n\n\nShow the Code\n# Divide into income deciles \ndata = mutate(data, decile = ntile(income, 10)) |> \n  mutate(decile = as_factor(decile))\n# Create the data for the plot\nplot = select(data, -total, -income, -owner) %>% \n  gather(var, value, -hid, -decile) %>% \n  left_join(., codebook, by = c(\"var\" = \"concept\")) |> group_by(decile, group) |> \n  summarise(value = mean(value)) |> group_by(decile) |> \n  mutate(share = (value/sum(value))*100)  |> \n  mutate(group = fct_reorder(factor(group), share, .desc = F))\n# Plot total expenditures by concept\nggplot(plot) +\n  geom_bar(aes(x = decile, y = share, fill = group), stat = \"identity\") +\n  scale_fill_viridis(discrete = T, option = \"E\") +\n  theme_economist() %+replace% theme(legend.title = element_blank()) +\n  labs(x = \"\", y = \"\")\n\n\n\n\n\nFigure 2: Consumption share by concept (SOEP 2010)\n\n\n\n\n\n\n\n\nShow the Code\n# Divide into income deciles \ndata = mutate(data, decile = ntile(income, 10)) |> \n  mutate(decile = as_factor(decile))\n# Create the data for the plot\nplot = select(data, -total, -income, -owner) %>% \n  gather(var, value, -hid, -decile) %>% \n  left_join(., codebook, by = c(\"var\" = \"concept\")) |> group_by(decile, group) |> \n  summarise(value = mean(value)) |> group_by(decile) |> \n  mutate(share = (value/sum(value))*100)  |> \n  mutate(group = fct_reorder(factor(group), share, .desc = F))\n# Plot total expenditures by concept\nggplot(plot) +\n  geom_tile(aes(x = decile, y = group, fill = share), alpha = 0.75) +\n  geom_text(aes(x = decile, y = group, label = paste0(round(share, 1), \"%\"))) +\n  scale_fill_viridis(discrete = F, begin = 0, end = 0.6, option = \"D\") +\n  theme_economist() %+replace% theme(legend.title = element_blank()) +\n  labs(x = \"\", y = \"\") + guides(fill = \"none\")\n\n\n\n\n\nFigure 3: Share of total consumption across categories\n\n\n\n\n\n\n\n\nShow the Code\n# Divide into income deciles \ndata = mutate(data, decile = ntile(income, 10)) |> \n  mutate(decile = as_factor(decile))\n# Create the data for the plot\nplot = select(data, total, income, decile) |> \n  group_by(decile) |> \n  summarise(consumption = mean(total), income = mean(income)) |> \n  mutate(share = (consumption/income)*100)\n# Plot total expenditures by concept\nggplot(plot) +\n  geom_bar(aes(x = decile, y = share, fill = share), stat = \"identity\") +\n  geom_text(aes(x = decile, y = share, label = paste0(round(share,1), \"%\")), vjust = -0.5) +\n  scale_fill_viridis(discrete = F, option = \"E\", direction = -1) +\n  theme_economist() + guides(fill = \"none\") +\n  labs(x = \"\", y = \"\")  \n\n\n\n\n\nFigure 4: Consumption share of income (SOEP 2010)\n\n\n\n\n\n\n\n\nShow the Code\n# Divide into income deciles \ndata = mutate(data, decile = ntile(income, 10)) |> \n  mutate(decile = as_factor(decile))\n# Create the data for the plot\nplot = select(data, -total, -owner) %>% \n  gather(var, value, -hid, -decile, -income) %>% \n  left_join(., codebook, by = c(\"var\" = \"concept\")) |> group_by(decile, group, var) |> \n  summarise(value = mean(value, na.rm = T), income = mean(income, na.rm = T)) |> \n  group_by(decile, group, income) |> summarise(total = sum(value)) |> group_by(decile, group) |> \n  mutate(share = (total/income)*100)  |> \n  mutate(group = fct_reorder(factor(group), total, .desc = T))\n\n# Plot total expenditures by concept\nggplot(plot) +\n  geom_tile(aes(x = decile, y = reorder(group, share), fill = share), alpha = 0.75) +\n  geom_text(aes(x = decile, y = group, label = paste0(round(share, 1), \"%\"))) +\n  scale_fill_viridis(discrete = F, begin = 0, end = 0.6, option = \"D\") +\n  theme_economist() %+replace% theme(legend.title = element_blank()) +\n  labs(x = \"\", y = \"\") + guides(fill = \"none\")\n\n\n\n\n\nFigure 5: Consumption share of income across categories"
  },
  {
    "objectID": "02_data.html#hwealth",
    "href": "02_data.html#hwealth",
    "title": "Data",
    "section": "HWEALTH",
    "text": "HWEALTH\nThe SOEP collected wealth data in 2002, 2007, 2012, and 2017 through the HWEALTH module.\nCompared to pure demographic variables, wealth data often contains high nonresponse rates. The SOEP adjusts for missing data with logical and multiple imputations. In 2002, the SOEP surveyed nine asset and liability components; owner-occupied housing, other property, financial assets, business assets, tangible assets, private pensions, mortgage debts, and consumer credits. While in 2002, the Item private pensions and life insurances included building loan contracts, the SOEP separated the question from 2007. In 2017, the SOEP added two wealth components, the value of vehicles and student loans. However, other assets are missing, e.g., cash, livestock and crops, equipment, intangible assets, claims against private insurance, and commercial loans.\nTable 13 contains a sample of the HWEALTH module aggregate wealth measures. These are, GrossWealth GrossDebts, and NetWealth. For each element, there are two distinct columns. The column with the number two at the end corresponds to wealth values considering vehicles and student loans. The one without the suffix only considers the wealth of the nine assets surveyed since 2002.\nTable 14 shows a sample of property wealth. While the column without the number two at the end corresponds to owner-occupied housing, the column with a two at the end refers to other properties. As with the previous table, it is possible to separate property values into gross, debt, and net.\n\n\n\n\nTotal WealthPropertiesFinancialOther\n\n\n\n\nShow the Code\nkbl(data |> select(c(hid, year, GrossWealth:NetWealth2)) %>% arrange(-year, hid) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 13:  Sample of the wealth module (Totals) \n \n  \n    hid \n    year \n    GrossWealth \n    GrossWealth2 \n    GrossDebts \n    GrossDebts2 \n    NetWealth \n    NetWealth2 \n  \n \n\n  \n    94 \n    2017 \n    103000 \n    103000 \n    0 \n    0 \n    103000 \n    103000 \n  \n  \n    159 \n    2017 \n    1139800 \n    1143800 \n    0 \n    0 \n    1139800 \n    1143800 \n  \n  \n    167 \n    2017 \n    20000 \n    23000 \n    0 \n    0 \n    20000 \n    23000 \n  \n  \n    230 \n    2017 \n    404000 \n    409000 \n    0 \n    0 \n    404000 \n    409000 \n  \n  \n    523 \n    2017 \n    51000 \n    69000 \n    0 \n    0 \n    51000 \n    69000 \n  \n  \n    582 \n    2017 \n    5000 \n    5000 \n    0 \n    0 \n    5000 \n    5000 \n  \n\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(data |> select(c(hid, year, HouseRaw:HouseDebt2)) %>% arrange(-year, hid) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 14:  Sample of the wealth module (Properties) \n \n  \n    hid \n    year \n    HouseRaw \n    HouseDebt \n    HouseNet \n    HouseRaw2 \n    HouseNet2 \n    HouseDebt2 \n  \n \n\n  \n    94 \n    2017 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n  \n    159 \n    2017 \n    0 \n    0 \n    0 \n    1500 \n    1500 \n    0 \n  \n  \n    167 \n    2017 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n  \n    230 \n    2017 \n    350000 \n    0 \n    350000 \n    0 \n    0 \n    0 \n  \n  \n    523 \n    2017 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n  \n    582 \n    2017 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(data |> select(c(hid, year, financial, insurances, ConsumerDebt, StudentLoans)) %>% arrange(-year, hid) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 15:  Sample of the wealth module (Financial) \n \n  \n    hid \n    year \n    financial \n    insurances \n    ConsumerDebt \n    StudentLoans \n  \n \n\n  \n    94 \n    2017 \n    3000 \n    200000 \n    0 \n    0 \n  \n  \n    159 \n    2017 \n    1000000 \n    51800 \n    0 \n    0 \n  \n  \n    167 \n    2017 \n    0 \n    40000 \n    0 \n    0 \n  \n  \n    230 \n    2017 \n    50000 \n    4000 \n    0 \n    0 \n  \n  \n    523 \n    2017 \n    45000 \n    12000 \n    0 \n    0 \n  \n  \n    582 \n    2017 \n    0 \n    10000 \n    0 \n    0 \n  \n\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(data |> select(c(hid, year, tangible, business, CarsValue)) %>% arrange(-year, hid) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 16:  Sample of the wealth module (Other) \n \n  \n    hid \n    year \n    tangible \n    business \n    CarsValue \n  \n \n\n  \n    94 \n    2017 \n    0 \n    0 \n    0 \n  \n  \n    159 \n    2017 \n    10000 \n    102400 \n    4000 \n  \n  \n    167 \n    2017 \n    0 \n    0 \n    3000 \n  \n  \n    230 \n    2017 \n    0 \n    0 \n    5000 \n  \n  \n    523 \n    2017 \n    0 \n    0 \n    18000 \n  \n  \n    582 \n    2017 \n    0 \n    0 \n    0 \n  \n\n\n\n\n\n\n\n\n\nTable 15 includes financial wealth in the form of financial assets, insurances, consumer debt, and car loans. Table 16 further portrays other wealth elements as the value of business, vehicles, and tangible assets\nFigure 6 portrays the relationshipo between the income distribution divided by deciles and gross wealth, gross debt, and net wealth. As expected, both wealth and debts increase with income. While, average net wealth for the highest decile is of more than 805,000 Euros (118k of debt) , net wealth for the lowest decile is less than 17,000 euros (2.5k of debt). Figure 7 shows the same relationship for age, in line with the literature, age and wealth exhibit decreasing returns to scale (add cite). Although debts peak for people between 40 and 50, Gross and Net Wealth peak for people between 60 and 70.\nIn Figure 8 we show the composition of wealth by income decile. The overall wealth structure seems quite constant between the first and ninth deciles. However, for the last decile, the wealth composition changes by increasing the importance of business and other properties as a share of total wealth.\n\nWealth and IncomeWealth and AgeWealth Composition\n\n\n\n\nShow the Code\n# Create the data for the plot\ndata = mutate(ungroup(data), decile = ntile(income, 10)) |> \n  mutate(decile = as_factor(decile))\n# Plot \nplot = data |> filter(year == 2017) |> \n  select(decile, `A) Gross Wealth`= GrossWealth, `B) Gross Debt` = GrossDebts, \n         `C) Net Wealth` = NetWealth) %>%\n  gather(var, value, -decile) %>%  group_by(decile, var) |> \n  summarise(value = mean(value))\n# Plot total expenditures by concept\nggplot(plot) +\n  geom_bar(aes(x = decile, y = value/1000, fill = decile), stat = \"identity\") +\n  scale_fill_viridis(discrete = T, option = \"E\") +\n  theme_economist() %+replace% theme(legend.title = element_blank()) +\n  labs(x = \"\", y = \"\") + facet_wrap(~var) + guides(fill = \"none\")\n\n\n\n\n\nFigure 6: Relationship between income and total wealth\n\n\n\n\n\n\n\n\nShow the Code\n# Create the data for the plot\ndata = mutate(ungroup(data), decile = cut2(age, seq(10, 80, 10))) |> \n  mutate(decile = as_factor(decile))\n# Plot \nplot = data |> filter(year == 2017) |> \n  select(decile, `A) Gross Wealth`= GrossWealth, `B) Gross Debt` = GrossDebts, \n         `C) Net Wealth` = NetWealth) %>%\n  gather(var, value, -decile) %>%  group_by(decile, var) |> \n  summarise(value = mean(value))\n# Plot total expenditures by concept\nggplot(plot) +\n  geom_bar(aes(x = decile, y = value/1000, fill = decile), stat = \"identity\") +\n  scale_fill_viridis(discrete = T, option = \"E\") +\n  theme_economist() %+replace% theme(legend.title = element_blank(), axis.text.x = element_text(angle = 90)) +\n  labs(x = \"\", y = \"\") + facet_wrap(~var) + guides(fill = \"none\")\n\n\n\n\n\nFigure 7: Relationship betsween age and total wealth\n\n\n\n\n\n\n\n\nShow the Code\ndata = mutate(ungroup(data), decile = ntile(income, 10)) |> \n  mutate(decile = as_factor(decile))\n# Create the data for the plot\nplot = data |>  filter(year == 2017) |> \n  select(-c(GrossWealth:NetWealth2, HouseRaw, age, year, \n            HouseRaw2, HouseDebt, HouseDebt2, \n            ConsumerDebt, StudentLoans, income, owner)) %>%  \n  gather(var, value, -hid, -decile) |> group_by(decile, var) |> \n  summarise(value = mean(value)/1000) |> group_by(decile) |> \n  mutate(share = (value/sum(value))*100)  \n# Rename the wealth groups\norig = c(\"tangible\", \"business\", \"CarsValue\", \"HouseNet2\", \"insurances\", \"financial\", \"HouseNet\")\nsubs = c(\"Tangible\", \"Business\", \"Cars\",\n         \"Other Property\", \"Insurance\", \"Financial\", \"Main Property\")\nplot = mutate(plot, group = mgsub(var, orig, subs)) |> \n  mutate(group = fct_reorder(factor(group), share, .desc = F))\n# Transform from wide to long format \nplot = gather(plot, type, value, -decile, -var, -group) |> \n  mutate(type = mgsub(type, c(\"value\", \"share\"), c(\"a) Value in Ths. Euros\", \"b) Percentage of Net Wealth\")))|> \n  mutate(group = fct_reorder(factor(group), value, .desc = F))\n# Plot total expenditures by concept\nggplot(plot) +\n  geom_bar(aes(x = decile, y = value, fill = str_wrap(group, 15)), stat = \"identity\") +\n  scale_fill_viridis(discrete = T, option = \"E\") +\n  theme_economist() %+replace% \n  theme(legend.title = element_blank(), strip.text = element_text(hjust = 0)) +\n  labs(x = \"\", y = \"\") + facet_wrap(~type, scales = \"free\")\n\n\n\n\n\nFigure 8: Composition of wealth by income decile"
  },
  {
    "objectID": "02_data.html#individual-panel",
    "href": "02_data.html#individual-panel",
    "title": "Data",
    "section": "Individual panel",
    "text": "Individual panel\n\n\n\nOnce we load the hgen and pequiv files, we merge them and construct a final panel data of SOEP individuals between 2005 and 2018. The data set contains 547,704 observations across 112,745 individuals and 40,852 households. On average, each person remains in the panel 4.9 years. The data set contains 57 different variables (each of which is defined in the glossary section).\nWhen merging the household and individual-level data. We perform different checks and create additional variables.\n\nWe change all negative values (NAs) from the raw SOEP data to R NA format.\nTransform the indicator variables with “Ja” or “Nein” structure to binary dummies.\nTransform net and gross income (income, GrossIncome) from Euros to Thousand of Euros.\nImpute the ownership and lodge indicators in cases with missing data if the household does not report moving.\nKeep only the industry of the household head.\nAssume that if the dwelling has a garden it is a house.\nAssume that if the dwelling has an elevator it is a flat.\nTransform the PV data from one when bought to one if owned.\nDetermine the age of the panel – PanelYear.\nSimplify the lodge identifier to only “House” or “Flat”.\n\n\nIndividual covariatesEmploymentDwellingDwelling Charac.Energy EfficiencyEnergy Costs\n\n\n\n\nShow the Code\nkbl(soep |> select(pid, hid, year, head, age, sex, education) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 17:  Individual Covariates in the full sample \n \n  \n    YearMoved \n    pid \n    hid \n    year \n    head \n    age \n    sex \n    education \n  \n \n\n  \n    1994 \n    201 \n    27 \n    2005 \n    2 \n    79 \n    2 \n    10.5 \n  \n  \n    1994 \n    201 \n    27 \n    2006 \n    2 \n    80 \n    2 \n    10.5 \n  \n  \n    1994 \n    201 \n    27 \n    2007 \n    2 \n    81 \n    2 \n    10.5 \n  \n  \n    1994 \n    201 \n    27 \n    2008 \n    2 \n    82 \n    2 \n    10.5 \n  \n  \n    1997 \n    203 \n    60313 \n    2005 \n    2 \n    45 \n    1 \n    18.0 \n  \n  \n    1997 \n    203 \n    60313 \n    2006 \n    2 \n    46 \n    1 \n    18.0 \n  \n\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(soep |> select(pid, hid, year, employment, occupation, income, GrossIncome) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 18:  Employmenr Covariates in the full sample \n \n  \n    YearMoved \n    pid \n    hid \n    year \n    employment \n    occupation \n    income \n    GrossIncome \n  \n \n\n  \n    1994 \n    201 \n    27 \n    2005 \n    0 \n    0 \n    7.648 \n    0.209 \n  \n  \n    1994 \n    201 \n    27 \n    2006 \n    0 \n    0 \n    7.723 \n    0.301 \n  \n  \n    1994 \n    201 \n    27 \n    2007 \n    0 \n    0 \n    11.488 \n    4.103 \n  \n  \n    1994 \n    201 \n    27 \n    2008 \n    0 \n    0 \n    8.019 \n    0.209 \n  \n  \n    1997 \n    203 \n    60313 \n    2005 \n    1 \n    2131 \n    18.800 \n    7.550 \n  \n  \n    1997 \n    203 \n    60313 \n    2006 \n    1 \n    2131 \n    24.796 \n    28.900 \n  \n\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(ungroup(soep) |> select(pid, hid, year, YearMoved, owner, FreeRent, lodge, NewestConstDate, OldestConstDate) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 19:  Employmenr Covariates in the full sample \n \n  \n    pid \n    hid \n    year \n    YearMoved \n    owner \n    FreeRent \n    lodge \n    NewestConstDate \n    OldestConstDate \n  \n \n\n  \n    201 \n    27 \n    2005 \n    1994 \n    0 \n    NA \n    Flats \n    1980 \n    1972 \n  \n  \n    201 \n    27 \n    2006 \n    1994 \n    0 \n    NA \n    Flats \n    1980 \n    1972 \n  \n  \n    201 \n    27 \n    2007 \n    1994 \n    0 \n    NA \n    Flats \n    1980 \n    1972 \n  \n  \n    201 \n    27 \n    2008 \n    1994 \n    0 \n    NA \n    Flats \n    1980 \n    1972 \n  \n  \n    203 \n    60313 \n    2005 \n    1997 \n    0 \n    NA \n    Flats \n    1918 \n    0 \n  \n  \n    203 \n    60313 \n    2006 \n    1997 \n    0 \n    NA \n    Flats \n    1918 \n    0 \n  \n\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(ungroup(soep) |> select(pid, hid, year, HouseSize, basement, garden, elevator, balcony) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 20:  Dwelling characteristics Covariates in the full sample \n \n  \n    pid \n    hid \n    year \n    HouseSize \n    basement \n    garden \n    elevator \n    balcony \n  \n \n\n  \n    201 \n    27 \n    2005 \n    43 \n    1 \n    0 \n    -8 \n    0 \n  \n  \n    201 \n    27 \n    2006 \n    43 \n    1 \n    0 \n    -8 \n    0 \n  \n  \n    201 \n    27 \n    2007 \n    43 \n    0 \n    0 \n    -8 \n    1 \n  \n  \n    201 \n    27 \n    2008 \n    43 \n    1 \n    0 \n    -8 \n    1 \n  \n  \n    203 \n    60313 \n    2005 \n    67 \n    1 \n    0 \n    -8 \n    1 \n  \n  \n    203 \n    60313 \n    2006 \n    67 \n    1 \n    0 \n    -8 \n    1 \n  \n\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(ungroup(soep) |> select(pid, hid, year, ac, FloorHeating, CentralFloorHeating, ThermalInsulation, AlternativeEnergy, pv, boiler) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 21:  Energy Efficiency Technologies \n \n  \n    pid \n    hid \n    year \n    ac \n    FloorHeating \n    CentralFloorHeating \n    ThermalInsulation \n    AlternativeEnergy \n    pv \n    boiler \n  \n \n\n  \n    201 \n    27 \n    2005 \n    NA \n    -8 \n    1 \n    -8 \n    -8 \n    0 \n    1 \n  \n  \n    201 \n    27 \n    2006 \n    NA \n    -8 \n    1 \n    -8 \n    -8 \n    0 \n    1 \n  \n  \n    201 \n    27 \n    2007 \n    0 \n    -8 \n    1 \n    -8 \n    -8 \n    0 \n    1 \n  \n  \n    201 \n    27 \n    2008 \n    0 \n    -8 \n    1 \n    -8 \n    -8 \n    0 \n    1 \n  \n  \n    203 \n    60313 \n    2005 \n    NA \n    -8 \n    1 \n    -8 \n    -8 \n    0 \n    1 \n  \n  \n    203 \n    60313 \n    2006 \n    NA \n    -8 \n    1 \n    -8 \n    -8 \n    0 \n    1 \n  \n\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(ungroup(soep) |> select(pid, hid, year, PowerCosts, OtherUtilityCosts, GasCosts, WarmWaterCosts) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 22:  Energy Efficiency Technologies \n \n  \n    pid \n    hid \n    year \n    PowerCosts \n    OtherUtilityCosts \n    GasCosts \n    WarmWaterCosts \n  \n \n\n  \n    201 \n    27 \n    2005 \n    NA \n    20 \n    NA \n    30 \n  \n  \n    201 \n    27 \n    2006 \n    NA \n    20 \n    NA \n    33 \n  \n  \n    201 \n    27 \n    2007 \n    NA \n    25 \n    NA \n    30 \n  \n  \n    201 \n    27 \n    2008 \n    NA \n    20 \n    NA \n    30 \n  \n  \n    203 \n    60313 \n    2005 \n    NA \n    80 \n    NA \n    20 \n  \n  \n    203 \n    60313 \n    2006 \n    NA \n    75 \n    NA \n    20"
  },
  {
    "objectID": "02_data.html#distribution-of-power-costs-by-income",
    "href": "02_data.html#distribution-of-power-costs-by-income",
    "title": "Data",
    "section": "Distribution of power costs by income",
    "text": "Distribution of power costs by income\nNext, we use the information on income and power cost from the sub-set of renters to look at the relationship between annual power costs and income. For this, we divide the data set into ten different income groups based on the deciles of the income distribution and estimate the average and standard deviation of income and power costs in each decile.\nTable 23 contains a sample of the final data. IncomeGroup refers to the income decile. IncAvg is the average yearly income in thousands of Euros. PowerCostAvg is the average yearly power bill in Euros. IncSD is the standard deviation of annual income. And PowerCostSd the analogous for power costs. Figure 9 contains the density (Log) function of annual Power Costs across different income deciles. As expected, the density is normally distributed with higher mean values for more wealthy households.\n\nData SetDescriptives\n\n\n\n\nShow the Code\n# Load Data\nfile = gsub(\"WebsiteABM\", \"\", getwd())\ndata = read_rds(paste0(file, \"02_GenData/03_SoepFiles/IncomePowerDeciles.rds\"))\n# Show the table\nkbl(ungroup(data) %>% head(.)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\"))\n\n\n\n\nTable 23:  Energy Efficiency Technologies \n \n  \n    IncomeGroup \n    IncAvg \n    PowerCostAvg \n    IncSd \n    PowerCostSd \n  \n \n\n  \n    [ 0.0, 13.6) \n    10.13827 \n    636.0916 \n    2.187315 \n    330.0873 \n  \n  \n    [13.6, 20.4) \n    17.11669 \n    736.8999 \n    1.953851 \n    365.6021 \n  \n  \n    [20.4, 25.8) \n    23.17710 \n    822.1222 \n    1.546291 \n    443.9794 \n  \n  \n    [25.8, 30.9) \n    28.23839 \n    887.2933 \n    1.447322 \n    568.0897 \n  \n  \n    [30.9, 36.1) \n    33.42765 \n    920.2857 \n    1.523214 \n    449.2557 \n  \n  \n    [36.1, 42.0) \n    38.92149 \n    926.9687 \n    1.666120 \n    437.2922 \n  \n\n\n\n\n\n\n\n\n\n\n\nFigure 9: Density function of Power Costs across Income Deciles"
  },
  {
    "objectID": "02_data.html#probability-of-pv-adoption",
    "href": "02_data.html#probability-of-pv-adoption",
    "title": "Data",
    "section": "Probability of PV adoption",
    "text": "Probability of PV adoption"
  },
  {
    "objectID": "02_data.html#variables-glossary",
    "href": "02_data.html#variables-glossary",
    "title": "Data",
    "section": "Variables Glossary",
    "text": "Variables Glossary\n\n\npid: This variable provides unique identification for each individual ever surveyed in the SOEP.\nhid: This variable links individuals to the households they were living in at the time of the interview. The SOEP provides yearly household identification numbers.\nsample: This variable indicates from which sub sample an individual in the SOEP is drawn. The variable contain the following levels\nage: Indicates the age of the individual\nsex: Indicates the gender of the individual (1 – Male and 2 – Female)\nMaritalStatus: Indicates the marital status of the individual (1 – Married, 2 – Single, 3 – Widowed, 4 – Divorced, 5 – Separated, 6 and 7 — Not with partner)\nNpersons: Refers to the number of persons in the household\nNkids: Number of kids in the household\neducation: Years of education\nemployment: Indicator variable equal to one if the person is employed\noccupation: Individual’s occupation according to the ISCO-88 occupation code (ISCO = International Classification of Occupations)\nindustry1: Individual’s two-digit industry code based on ten categories (1 – Agriculture, 2 – Energy, 3 – Mining, 4 – Manufacturing, 5 – Construction, 6 – Trade, 7 – Transport, 8 – Bank and Insurance, 9 – Services).\nindustry2: Individual’s NACE industry code\nstate: German state of residence\nregion: German region of residence\nincome: Household post-government income (after taxes and government transfers for all persons in the household)\nGrossIncome: Household pre-government income\nhead: Individual’s relationship to household head (1 – Head, 2 – Partner, 3 – Child, 4 – Relative, 5 – Non Relative)"
  },
  {
    "objectID": "03_theory.html",
    "href": "03_theory.html",
    "title": "Theoretical Background",
    "section": "",
    "text": "\\[\nU_{ht}^{pv = 1} | F_{ht} = E_i[\\sum_{t = 1}^{T} \\beta \\Pi_ht | Z_{ht}] + \\alpha \\lambda_{ht} + \\phi Env_{ht} + \\epsilon_{ht}\n\\tag{1}\\]\nIn it, the utility from the PV (\\(U_{ih}^{pv = 1}\\)) once feasible (\\(F_{ht} = 1\\)) is a function of the household \\(h\\) expectation of future profits (\\(\\Pi_{ht}\\)) associated with purchasing a PV installation at \\(t\\), i.e., \\(E_i[\\sum_{t = 1}^{T} \\beta p_it | Z_{it}]\\). Throughout the presentation, the expectation operator takes the household’s subjective distribution of profits given observable available information at \\(t\\), \\(Z_{it}\\). Now, the Feasibility operator (\\(F_{ht}\\)) is an indicator variable determining if it is possible for household \\(h\\) to install the PV system in the current dwelling. For instance, for households with short-term flat rents in the city center, it would likely be unfeasible to install a PV system.\nThe household’s utility also depends on social and environmental components. The social element \\(\\lambda_{ht}\\) is a continuous variable between zero and one, indicating the share of close-by neighbors with a PV installation. The network estimate incorporates evidence from the literature on behavioral economics and technology adoption regarding peers’ influence on peoples’ probability of adopting new technologies. The environmental component (\\(Env_{ht}\\)) captures the utility of investing in green technologies for persons with strong environmdsental preferences. For instance, even if the utility from elicited profits and network effects is negative, a share of the population would adopt green technologies because of environmental preferences.\nEach household elicits the profits from owning a PV (\\(p_{ht}\\)) by solving Equation 2. in it, \\(\\Delta_{ht}\\) is the expected energy the PV installation would generate for household \\(h\\) at time \\(t\\). This expectation depends positively on each individuals’ coefficient of risk aversion (\\(\\phi_i\\)), i.e., \\(\\frac{\\partial \\Delta_{it}}{\\partial \\phi_i} \\leq 0\\). Besides risk aversion, the coefficient also depends on individual characteristics \\((Z_{it})\\) like past consumption, age, income, and family size.\n\\[\n\\Pi_{ht} = \\sum_{t=1}^{T} \\big[E(\\Delta_{ht}|\\phi_h, Z_{ht}) E(p_{ht}, Z_{ht}|\\phi_i) - K_t - I_{ht}|Z_{ht} \\big]\n\\tag{2}\\]\n\\(p_{ht}\\) represents household \\(h\\) expected grid-price of electricity. As with the expectation of energy production, the price depends on individual characteristics \\((Z_{it})\\) and the risk aversion parameter \\(\\phi_i\\) with \\(\\frac{\\partial p_{it}}{\\partial \\phi_i} \\leq 0\\). Next, \\(K_t\\) are the capital costs of the PV system at \\(t\\) and \\(I_{ht}\\) all costs related to bank loans in cases where the household is capital constrained. As with elicited future energy expenditures and prices, \\(I_{ht}\\) depends on observable household characteristics (\\(Z_{it}\\)), e.g., banks provide lower interest rates to wealthy individuals with steady jobs.\nAn individual only applies for a bank loan when their liquidity at \\(t\\) is lower than the costs associated with the installation of the PV system, i.e., \\(Loan_{it} = max(0, K_t - \\mu_{it})\\). Now, if the loan required to obtain a PV (\\(Loan_{it}\\)) is larger than the income of the household times a bank threshold multiplier (\\(y_{it} \\times \\sigma\\)), the loan is too risky for the banking institution, and even though household \\(h\\) elicits a positive utility from PV, it would not purchase the system because of capital constraints. When the banking institution provides the loan necessary to purchase the PV system, the cost of the loan is equal to \\(I_{it} = r + \\rho \\frac{Loan_{it}}{y_{it}}\\).\nThe liquidity of each household (\\(\\mu_{ht}\\)) evolves according to equation Equation 3.\n\\[\n\\mu_{it} =(1 - \\alpha_i^1) y_i + (1 - \\alpha_i^2)\\mu_{it-1} − (CE_i - PV_i  R^{PV})P_t - I_{it} Loan_{it} - \\gamma  Loan_i\n\\tag{3}\\]"
  },
  {
    "objectID": "04_model.html",
    "href": "04_model.html",
    "title": "Model Overview",
    "section": "",
    "text": "The model consists of a set of \\(N\\) households. Households’ initial characteristics are set using SOEP data alongside other data sources. Parameter values are set following empirical evidence as far as possible.\n\n\n\n\n\\(h\\) - Household identifier\n\\(t\\) - Year identifier\n\\(Y^h_t\\) - Income for household \\(h\\) at year \\(t\\)\n\\(C^h_t\\) - Consumption expenditure\n\\(E^h_t\\) - Electricity consumption (in kWh)\n\\(M^h_t\\) - Liquidity (i.e. the stock of accumulated wealth held in the form of liquid assets/money)\n\\(D^h_t\\) - Debt\n\\(S^h_t\\) - Debt service (consisting of interest (household-specific rate) & principal payments)\n\\(\\theta^h_t\\) - Share of saving which goes into liquid assets (calculated using Bundesbank data)\n\\(H_1^h\\) - Housing type (dummy; house or flat; fixed; taken from SOEP)\n\\(H_2^h\\) - Home ownership (dummy; own or rent; fixed; taken from SOEP)\n\\(F_h\\) - PV feasibility (dummy; can PV be installed on dwelling in principle?; fixed)\n\\(PV^h_t\\) - PV ownership (dummy; initialised from SOEP)\n\\(Age of panel\\) (initialised from SOEP)\n\\(Env_h\\) - Environmental attitude (heterogeneous but fixed for now, will be set using SOEP data)\n\\(Expectation model\\) (estimated individually by each household using past electricity prices)\n\\(p^{e,h}\\) - Time-series of future expected electricity prices\n\n\n\n\n\n\n\n\\(\\alpha_h\\) - Weight of social influence in utility (heterogeneous, set freely)\n\\(\\beta\\) - Weight of environmental attitude in utility (uniform, set freely)\n\\(\\gamma_h\\) - Gain parameter used in updating the electricity price expectation model (heterogeneous, set freely)\n\\(\\rho_h\\) - Discount rate (heterogeneous, set freely)\n\\(\\mu\\) - Adjustment speed of consumption expenditure (uniform, set freely)\n\\(g_h\\) - Trend growth rate of household income and electricity consumption (set freely and uniformly)\n\n\n\n\n\n\n\n\\(K\\) - Installation cost of PV (roughly calibrated based on online sources)\n\\(G\\) - Capacity of a solar panel (in kWh; roughly calibrated based on online sources)\n\\(A\\) - Lifespan of a panel (in years; roughly calibrated based on online sources)\n\\(r\\) - Base interest rate (set freely)\n\\(\\iota\\) - Interest rate markup parameter (set freely)\n\\(LTV\\) - Maximum permissible loan to value ratio (set freely)\n\\(DTI\\) - Maximum permissible loan payment to income ratio (set freely)\n\\(p^f_1\\) - Probability that PV is feasible on a house (set freely)\n\\(p^f_2\\) - Probability that PV is feasible on a flat (set freely)\n\n\n\n\n\n\n\n\\(Electricity price model\\) - a pre-defined AR(1) model which generates the electricity price in each period)\n\n\nThe sequence of events taking place in every simulation period only consists of a few steps:\n\n\nSet current electricity price\nDetermine income and electricity cost for each household; Update income distribution statistics\nBased on new income distribution determine consumption expenditure. Calculate saving, apply debt service for each household with positive debt and update liquidity\nAugment the age of existing solar panels; scrap those which exceed the maximum lifespan\nUpdate households’ expectations of future electricity price\nConsider adopting PV if not adopted yet"
  },
  {
    "objectID": "04_model.html#estimating-the-electricity-price",
    "href": "04_model.html#estimating-the-electricity-price",
    "title": "Model Overview",
    "section": "Estimating the electricity price",
    "text": "Estimating the electricity price\nWe simulate the current electricity price in period \\(t\\) using an AR(1) model estimated on a time-series of household-level electricity prices for Germany taken from Eurostat.1 This time-series is differenced and then used to estimate the intercept (\\(\\phi_1\\)) and autoregressive (\\(\\phi_2\\)) parameter, with the residuals used to calculate the standard deviation of random shocks (\\(\\sigma^p\\)). This estimated model is then simulated in each period in order to determine the current electricity price; accordingly, the electricity price in the model in \\(t\\) is given by:\n\\[\n    p_t=p_{t-1}+\\phi_1+\\phi_2 \\Delta p_{t-1}+\\epsilon^p_t \\rightarrow \\epsilon^p_t\\sim\\mathcal{N}(0,\\sigma^p)\n\\]"
  },
  {
    "objectID": "04_model.html#income-and-electricity-costs",
    "href": "04_model.html#income-and-electricity-costs",
    "title": "Model Overview",
    "section": "Income and electricity costs",
    "text": "Income and electricity costs\nIn every simulation period, we simulate the income of household \\(h=1,...,N\\) using a draw from the normally distributed \\(Y^h_t\\) with mean \\(\\overline{Y^h_t}\\) and standard deviation \\(\\widehat{Y^h_t}\\).\n\\[\n    Y^h_t\\sim \\mathcal{N}\\left(\\overline{Y^h_t},\\widehat{Y^h_t}\\right)\n\\]\nThe mean, \\(\\overline{Y^h_t}\\), is initialised using the income of \\(h\\) according to the 2018 SOEP wave and grows at rate \\(g_h\\) in every period thereafter. \\(\\widehat{Y^h_t}\\) is given by \\(\\overline{Y^h_t}\\cdot\\sigma^y_d\\) where \\(\\sigma^y_d\\) is the standard deviation of income within the income decile \\(d\\) of household \\(h\\) in the 2018 SOEP wave (expressed as % of average income in that decile)\nThe electricity consumption of each household (in kWh) is also a random variable, drawn from a normal distribution in each period:\n\\[\n    E^h_t\\sim \\mathcal{N}\\left(\\overline{E^h_t},\\widehat{E^h_t}\\right)\n\\]\nAs with income \\(\\overline{E^h_t}\\) is initialised using the electricity consumption of \\(h\\) taken from the 2018 SOEP wave (deflated by the 2018 electricity price from the Eurostat dataset) and grows at rate \\(g_h\\) in every period thereafter. \\(\\widehat{E^h_t}\\) is given by \\(\\overline{E^h_t}\\cdot\\sigma^e_d\\) where \\(\\sigma^e_d\\) is the standard deviation of electricity consumption within the income decile \\(d\\) of household \\(h\\) in the 2018 SOEP wave (expressed as % of average electricity consumption in that decile).\nThe cost of electricity to be paid by \\(h\\) is then given by\n\\[\n    p_t(E^h_t-PV^h_t G)\n\\]\nwhere the dummy \\(PV^h_t\\) denotes whether or not \\(h\\) owns a solar panel and \\(G\\) is the (uniform) capacity of that panel. Note that if \\(E^h_t<PV^h_t G\\) electricity cost is negative. The household produces more electricity than it consumes and, by assumption, can sell the surplus to the grid at price \\(p_t\\), generating additional income. To take this into account, we calculate an ex-post value of income as\n\\[\n    Y^{p,h}_t=Y^h_t-min\\left(0,p_t\\left(E^h_t-PV^h_t G\\right)\\right)\n\\]\nWe then calculate income distribution statistics (percentiles and deciles, used below) for period \\(t\\) using this ex-post income."
  },
  {
    "objectID": "04_model.html#consumption",
    "href": "04_model.html#consumption",
    "title": "Model Overview",
    "section": "Consumption",
    "text": "Consumption\nEach household devotes a part its income to consumption expenditures (excluding electricity consumption which is determined as described above). The average propensity to consume of \\(h\\), \\(c^h_t\\), is determined using survey data from the German Federal Statistical Office, which gives household consumption expenditure by income group, converted into percentiles using the 2018 SOEP wave. \\(c^h_t\\) is hence the average propensity to consume of the income percentile in which \\(h\\) finds itself in period \\(t\\). The desired consumption expenditure of \\(h\\) is then given by\n\\[\n    C^h_t=(1-\\mu)C^h_{t-1}+\\mu c^h_t Y^{p,h}_t\n\\]\nwhere \\(\\mu\\) is a parameter giving the speed at which consumption expenditure adjusts. In the initial period, we set \\(C^h_t=c^h_t Y^{p,h}_t\\).\nEach household in the model holds a stock of liquid assets (money) which is augmented by income and can be used to consume, pay for electricity, and service debt. To update the liquidity of \\(h\\), we first calculate the difference between income on the one hand and desired consumption expenditure and electricity consumption on the other:\n\\[\n    Save^h_t=Y^h_t-C^h_t-p_t(E^h_t-PV^h_t G)\n\\]\nRecall that if \\(PV^h_t=1\\) and \\(E^h_t<G\\), the household generates more electricity using PV than it actually consumes, and it sells the excess to the grid at the current electricity price, \\(p_t\\).\nIn the first instance, \\(Save^h_t\\) is added to existing liquidity. Note that we assume that households cannot hold negative liquidity; if saving is negative and larger than previously accumulated liquidity, liquidity is set to 0 (implicitly assuming that the household reduces desired consumption expenditure and/or expenditure on electricity in order to be able to afford the payments):\n\\[\n    M^h_t=max\\left(0,M^h_{t-1}+Save^h_t\\right)\n\\]\nIn the model, households may incur debt in order to purchase a solar panel. At the beginning of the simulation, the debt of all households (including those already owning PV) is initialised to 0. In any period \\(t>0\\), households which in the past used a loan in order to buy PV and have not yet fully paid it off must make a debt service payment consisting of interest and principal payments, denoted by \\(S^h\\). \\(S^h\\) is determined when a household takes out a loan in order to adopt PV. Its calculation is explained in the description of the adoption decision below.\nPayments for debt service are made out of the stock of liquidity updated above:\n\\[\n    M^h_t=max\\left(0,M^h_t-S^h_t\\right)\n\\]\nNote that here, too, we assume that payments cannot lead to negative liquidity! If a household is unable to (fully) make its debt service payment out of liquidity, it pays as much as it can, making first the interest payment and then the principal payment. Unpaid principal payments mean that the stock of debt does not decrease as much as it would if the payment were made in full. Any unpaid interest payments are added to the household’s outstanding debt. In both of these cases, \\(S^h\\), i.e. the per-period debt service to be paid in the future is re-calculated taking into account unpaid principal and/or interest payments and the remaining term of the loan.\nIn a final step, we include a saving allocation choice. This is done to make sure that average household liquidity does not grow too fast. In particular we assume that\n\\[\n    M^h_t=M^h_{t-1}+\\theta^h_t(M^h_t-M^h_{t-1}) \\quad if\\ M^h_t>M^h_{t-1}\n\\]\ni.e. we assume that if the household has positive saving, it puts only part of this into liquid assets (bank deposits etc.). \\(\\theta^h_t\\) is set using Bundesbank data from which we calculate the share of liquid assets in median gross wealth by income group, such that \\(\\theta^h_t\\) is the corresponding share for the income percentile in which \\(h\\) finds itself in period \\(t\\).\nThe Initial value for liquidity is also set using these data, using median gross wealth and the share of liquid assets for the income group in which \\(h\\) starts out."
  },
  {
    "objectID": "04_model.html#updating-the-panels-age",
    "href": "04_model.html#updating-the-panels-age",
    "title": "Model Overview",
    "section": "Updating the panel’s age",
    "text": "Updating the panel’s age\nThe model assumes that solar panels have a uniform maximum lifespan, and the age of each panel in the model is augmented by 1 in each period. The age of panels already existing at the beginning of the simulation is taken from SOEP data. If a panel owned by a household \\(h\\) reaches the maximum lifespan in \\(t\\), the panel is scrapped and the state variable \\(PV^h_t\\) is set to 0. The household can then (see below) decide whether they wish to buy a new panel."
  },
  {
    "objectID": "04_model.html#electricity-price-expectations",
    "href": "04_model.html#electricity-price-expectations",
    "title": "Model Overview",
    "section": "Electricity price expectations",
    "text": "Electricity price expectations\nIn order to form an expectation about whether purchasing a solar panel is a profitable undertaking, households must have an expectation of the future electricity price over the lifespan of the panel. In line with a large literature on alternatives to the rational expectations hypothesis, it is assumed that each household uses recursive least squares learning in order to estimate an econometric model of the electricity price using past observations, which is then projected forward to generate a time-series of expected future electricity prices.\nIn particular, we assume that agents know that changes in the electricity price follow an AR(1) model, but they do not know the parameters of this model. They attempt to learn them using the recursive least squares formula with constant gain:\n\\[\nR^h_t =R^h_{t-1}+\\gamma_h\\left(x_t x_t'-R^h_{t-1}\\right) n^h_t =n^h_{t-1}+\\gamma_h\\left(R^h_t\\right)^{-1}x_t(y_t-x_t' n^h_{t-1})\n\\]\nwhere \\(x_t\\) is the vector of independent variables (in our case, since we are estimating an AR(1) with intercept, this vector will contain the elements 1 and \\(\\Delta p_{t-1}\\)). \\(y_t\\) is the dependent variable in \\(t\\) (i.e. \\(\\Delta p_{t}\\)). \\(R^h_t\\) is \\(h\\)’s current estimate of the moment matrix of \\(x\\). \\(n^h_t\\) is \\(h\\)’s current estimate of the vector of parameters (intercept and AR parameter). \\(\\gamma_h\\) is the so-called gain parameter, which determines how sensitive \\(h\\)’s estimates are to new observations.\nEach household \\(h\\) hence has an internal AR(1) model with the parameters contained in \\(n^h_t\\). Using the current electricity price, they can use this model to project the price forward, generating a time-series of expected future electricity prices which is used below to form an expected revenue from owning a solar panel.\n\\(R^h_t\\) and \\(n^h_t\\) are initialised uniformly across households and close to their true values. However, the fact that \\(\\gamma_h\\) differs across households implies that households update their expectations differently."
  },
  {
    "objectID": "04_model.html#adoption-decision",
    "href": "04_model.html#adoption-decision",
    "title": "Model Overview",
    "section": "Adoption Decision",
    "text": "Adoption Decision\nThe decision on whether or not to adopt PV is based on a simple utility maximization framework; every household which does not already own a solar panel makes this decision in every simulation period. By assumption, there exists only one type of solar panel in the model, which has a fixed, uniform installation cost for every household and which generates a fixed, uniform amount of electricity (in kWh) in every period in which it is installed. The adoption decision is hence a binary one between adopting and not adopting.\nPrior to deciding whether or not to purchase a solar panel based on utility considerations, however, every household which does not already own PV must check whether they are financially capable of adopting. The uniform installation cost of a panel is given by \\(K\\). If the accumulated liquidity of household \\(h\\), \\(M^h_t\\) is greater than \\(K\\), \\(h\\) can buy a panel outright and proceeds to the utility maximisation problem. If \\(M^h_t<K\\), \\(h\\) must obtain a loan of size \\(L^h=K-M^h_t\\).\nBy assumption, the bank in the model sets a maximum amount which it is prepared to lend to any given household \\(h\\), which is determined by \\(LTV\\cdot K\\) where \\(LTV<1\\) i.e. it is a fraction of the cost of the panel. If \\(L^h>LTV\\cdot K\\), the household cannot obtain a loan of sufficient size; they are credit-rationed and cannot adopt. If they pass the first check, the bank also checks whether the household is financially capable of meeting the payments on a loan of size \\(L^h\\). The interest rate which the bank would charge on a loan to \\(h\\) is given by\n\\[\n    r_h=r+\\iota \\frac{L^h}{LTV\\cdot K}\n\\]\ni.e. the interest rate charged by the bank increases with the loan to value ratio implied by the loan. Given that loans in the model are assumed to be amortising, and assuming that all loans in the model have a duration equal to the lifetime of a panel, \\(A\\), the per-period payment on a loan of size \\(L^h\\) at rate \\(r_h\\) would be\n\\[\n    S^h=L^h\\frac{r_h(1+r_h)^A}{(1+r_h)^A-1}\n\\]\nIf \\(S_h\\) exceeds a fraction \\(DTI\\) of the current income of \\(h\\), i.e. if \\(\\frac{S^h}{Y^h_t}>DTI\\) the household is also credit-rationed and cannot adopt. Otherwise, they proceed to the utility maximisation problem.\nComing to the utility maximisation part of the adoption decision, we assume that\n\\[\n    U^{PV=0}_{h,t}=0 \\quad \\forall\\  h \\in H \\ \\& \\ \\forall\\  t \\in T\n\\]\ni.e. the utility from not adopting PV is always zero for all households. This means that a household will adopt as soon as the utility from doing so is greater than zero (provided that they are not credit-constrained as described above). The utility from adopting is given by\n\\[\n    U_{h,t}^{PV = 1} | (F_{h}=1) = E_{h,t}(\\Pi_h)+\\alpha_h \\lambda_{h,t}+\\beta Env_{h} ---\n    U_{h,t}^{PV = 1} | (F_{h}=0) =0\n\\]\nFirst of all, note that \\(U_{h,t}^{PV = 1}\\) is conditional on \\(F_{h}\\). \\(F_{h}\\) is a dummy denoting the feasibility of PV, i.e. whether, given the characteristics of the dwelling of household \\(h\\), a solar panel can in fact be installed. If \\(F_{h}=0\\), PV cannot be installed and the utility, correspondingly, is zero. At present, \\(F_h\\) is set for each household at the beginning of the simulation and remains fixed thereafter. If a household already owns PV at the beginning, it is set to 1. Otherwise it is set to 1 with probability \\(p^f_1\\) if the household lives in a house and with probability \\(p^f_2<p^f_1\\) if the household lives in a flat.\nFocus now on the case of \\(F_h=1\\). Going from right to left, the term \\(\\beta Env_{h}\\) captures the environmental attitude of the household. \\(Env_h\\) is a random number drawn from \\(\\mathcal{U}(0,1)\\) for each household at the beginning of the simulation, which remains fixed thereafter. It is supposed to reflect the intrinsic utility which \\(h\\) derives from owning PV regardless of whether or not it is profitable to do so.\n\\(\\alpha_h \\lambda_{h,t}\\) captures the element of social influence/emulation, where\n\\[\n    \\lambda_{h,t}=\\omega^{PV=1}_{d=d_h, t-1}-\\omega^{PV=0}_{d=d_h, t-1}\n\\]\n\\(\\omega^{PV=1}_{d=d_h, t-1}\\) is the share of households in the same income decile as \\(h\\) who owned PV at the end of the previous period, with \\(\\omega^{PV=0}_{d=d_h, t-1}\\) being the share of households in the same decile who own PV. \\(\\lambda_{h,t}\\) hence takes a value between \\(-1\\) and \\(1\\).\nFinally, the term \\(E_{h,t}(\\Pi_h)\\) denotes \\(h\\)’s expectation at time \\(t\\) of the profit, \\(\\Pi_h\\) which \\(h\\) will be able to derive from owning PV over the lifetime of a panel. This expected profit is given by:\n\\[\n    E_{h,t}(\\Pi_h)=\\sum_{a = 1}^{A}\\rho_h^a E_{h,t}(p_{t+a})G-K-I^h\n\\]\n\\(\\sum_{a = 1}^{A}E_{h,t}(p_{t+a})G\\) is the expected revenue generated by the panel, obtained by multiplying the expected electricity price in every future period from \\(t+1\\) to \\(t+A\\) by the fixed capacity of the panel and taking the sum. This expected revenue is discounted by the individual discount rate of \\(h\\), \\(\\rho_h\\). Recall that, by assumption, households can buy and sell electricity from/to the grid at the same price. It hence makes no difference whether \\(G\\) is greater or smaller than the actual average electricity consumption of \\(h\\); if the panel will generate excess electricity, \\(h\\) expects to be able to sell this to the grid at the expected price.\n\\(K\\) is the fixed installation cost of the panel, which is the same for every household.\n\\(I^h\\), finally, is the financing cost of the panel. If no loan is needed (first case above), the loan cost is obviously 0. If a loan is needed, the cost is equal to the discounted sum of interest payments which will have to be made over the entire term of the loan. As set out above, the interest rate on the loan is given by\n\\[\n    r_h=r+\\iota \\frac{L^h}{LTV\\cdot K}\n\\]\nfrom which we can calculate a per-period loan payment as\n\\[\n    S^h=L^h\\frac{r_h(1+r_h)^A}{(1+r_h)^A-1}\n\\]\nKnowing the principal and per-period payment, we can calculate an amortisation schedule telling us how much principal and interest the household will have to pay in each future period, which in turn allows us to derive the loan cost as the discounted sum of future interest payments (note that principal payments are not a cost as they do not affect net worth!).\nSince loans are not costless, it is possible that even if the discounted expected revenue from owning a panel exceeds the installation cost, overall expected profit may turn negative due to the implied financing cost!\nThe household sums up all three elements of utility (expected profit, social influence, environmental attitude) and if that sum is positive, it adopts PV. Any loan taken out to do so is added to their balance sheet."
  },
  {
    "objectID": "05_code.html",
    "href": "05_code.html",
    "title": "Model Code",
    "section": "",
    "text": "The model is written in Python. Below we provide a step-by-step documentation of all model functions. In total the model consists of 9 separate functions which are called at each time step plus one main function containing the initialisation and the main simulation loop, which we describe last."
  },
  {
    "objectID": "05_code.html#generate-electricity-price",
    "href": "05_code.html#generate-electricity-price",
    "title": "Model Code",
    "section": "Generate Electricity Price",
    "text": "Generate Electricity Price\nThis function is called once at the beginning of a simulation run in order to generate a time-series of the electricity price which agents have to pay at each time-step of the simulation (note that this is different from the expected future electricity price, described below). As explained in the model description section, this electricity price is generated by simulating an AR(1) model estimated on electricity price data for Germany.\nThe function takes two inputs, namely Params, which is a pandas dataframe containing the names and values of the model parameters and length, an integer denoting the length of the simulation.\nThe function then creates a numpy vector of zeros of size length. The first element of the vector is set to the initial electricity price taken from Params, while the second is set to the initial price plus the trend component, i.e. the intercept from the AR(1) model. All subsequent elements are then generated by iterating the AR(1) model forward, including a normally distributed random shock the standard deviation of which is taken from the standard deviation of the residuals from the estimation of the AR(1) model. Finally, the function returns the time-series of the electricity price.\n\ndef GenerateElectricityPrice(Params,length):\n    electricityprice=np.zeros(length)\n    electricityprice[0]=Params[\"ElectricityPriceInit\"].values[0]\n    electricityprice[1]=electricityprice[0]+Params[\"ElectricityPriceTrend\"].values[0]\n    for t in range(2,length):\n        shock=Params[\"ElectricityPriceSD\"].values[0]*np.sqrt(-2*np.log(np.random.uniform(0,1,1)))*np.cos(2*np.pi*np.random.uniform(0,1,1))\n        electricityprice[t]=electricityprice[t-1]+Params[\"ElectricityPriceTrend\"].values[0]+Params[\"ElectricityPriceAR\"].values[0]*(electricityprice[t-1]-electricityprice[t-2])+shock\n    return electricityprice"
  },
  {
    "objectID": "05_code.html#set-policy",
    "href": "05_code.html#set-policy",
    "title": "Model Code",
    "section": "Set Policy",
    "text": "Set Policy\nDepending on the values of various dummies in the Params dataframe and the current simulation period, this function determines whether a policy experiment should be activated in the current period. At present, the model includes four possible policies, namely a subsidy on the cost of a solar panel (Subsidy1), a subsidy on the price at which electricity generated by PV can be sold to the grid (Subsidy2), a policy increasing the maximum permitted loan to value ratio for bank loans to acquire PV (CreditPolicy1, currently not used since in the baseline the maximum LTV is already set to 1), and a policy increasing the maximum allowed debt service to income ratio resulting from a loan made to acquire PV (CreditPolicy2). For instance, if the dummy Subsidy1 is set to 1 and if the current simulation period (expressed as a year) is equal to or larger than SubsidyStart, a subsidy on the installation cost of PV will be activated. The function checks the conditions for the respective policy variables in each period, changes them if necessary, and then returns them.\n\ndef SetPolicy(Subsidy1,Subsidy2,CreditPolicy1,CreditPolicy2,year,Params):\n    if Params[\"Subsidy1\"].values[0]==1 & year>=Params[\"SubsidyStart\"].values[0]:\n        Subsidy1=Params[\"s1\"].values[0]\n    if Params[\"Subsidy2\"].values[0]==1 & year>=Params[\"SubsidyStart\"].values[0]:\n        Subsidy2=Params[\"s2\"].values[0]\n    if Params[\"CreditPolicy1\"].values[0]==1 & year>=Params[\"CreditPolicyStart\"].values[0]:\n        CreditPolicy1=Params[\"cp1\"].values[0]\n    if Params[\"CreditPolicy2\"].values[0]==1 & year>=Params[\"CreditPolicyStart\"].values[0]:\n        CreditPolicy2=Params[\"cp2\"].values[0]\n    return[Subsidy1,Subsidy2,CreditPolicy1,CreditPolicy2]"
  },
  {
    "objectID": "05_code.html#income-and-power-cost",
    "href": "05_code.html#income-and-power-cost",
    "title": "Model Code",
    "section": "Income and Power cost",
    "text": "Income and Power cost\nThis function generates the random incomes and electricity costs for each agent in every period. Income_f and Powercost_f are vectors of length N, where N is the number of agents in the model. The deterministic mean value of income and power cost for each agent is assumed to grow at rate Trend (which may be heterogeneous across agents) at each time step. We then draw the actual income and power cost for each agent in the current period using uniform draws which are then transformed into draws from a normal distribution with means Income_f and Powercost_f respectively and standard deviations Income_sd and Powercost_sd respectively. Both income and power cost are constrained to be positive. If an agent owns PV, the amount it has to pay for electricity is reduced by the capacity of the panel times the current electricity price. Finally, we also calculate income_p, a measure of income net of electricity cost for each agent.\n\ndef IncomePowercost(Income_f,Trend,Powercost_f,Income_sd,Powercost_sd,PV,Price,Subsidy2,Params):\n    Income_f=Income_f*(1+Trend)\n    Powercost_f=Powercost_f*(1+Trend)\n    randincome=np.random.uniform(0,1,Income_f.size)\n    randincome2=np.random.uniform(0,1,Income_f.size)\n    randpowercost=np.random.uniform(0,1,Powercost_f.size)\n    randpowercost2=np.random.uniform(0,1,Powercost_f.size)\n    randincome=np.sqrt(-2*np.log(randincome))*np.cos(2*np.pi*randincome2)\n    randpowercost=np.sqrt(-2*np.log(randpowercost))*np.cos(2*np.pi*randpowercost2)\n    randincome=Income_sd*randincome*Income_f+Income_f\n    randincome=np.maximum(1e-10,randincome)\n    randpowercost=Powercost_sd*randpowercost*Powercost_f+Powercost_f\n    randpowercost=np.maximum(1e-10,randpowercost)\n    randpowercost=(randpowercost-PV*(1+Subsidy2)*Params[\"PVCapacity\"].values[0])*Price\n    income_p=randincome-randpowercost\n    return[randincome,randpowercost,income_p]"
  }
]